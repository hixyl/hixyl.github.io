3:I[9275,[],""]
5:I[1343,[],""]
6:I[4080,["185","static/chunks/app/layout-950680b5068c0831.js"],""]
7:I[4266,["185","static/chunks/app/layout-950680b5068c0831.js"],"default"]
4:["id","10%E6%9C%886%E6%97%A5%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E5%BA%93","d"]
0:["bbFeRMIduFcZud7BNs8NQ",[[["",{"children":["article",{"children":[["id","10%E6%9C%886%E6%97%A5%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E5%BA%93","d"],{"children":["__PAGE__?{\"id\":\"10月6日后端学习笔记-数据库\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["article",{"children":[["id","10%E6%9C%886%E6%97%A5%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E5%BA%93","d"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","article","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/99f6a99e5e57ec87.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/d0df4e9d9cd28850.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/c033a265c4b6e7f8.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","3",{"rel":"stylesheet","href":"/_next/static/css/81abeb1d965206f7.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","4",{"rel":"stylesheet","href":"/_next/static/css/a46a6036119d7d12.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","5",{"rel":"stylesheet","href":"/_next/static/css/51cbc18a5b192d8f.css","precedence":"next","crossOrigin":"$undefined"}]]}],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","article","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"zh","children":[["$","link",null,{"rel":"icon","href":"/favicon.png?<generated>","type":"image/<generated>","sizes":"<generated>"}],["$","$L6",null,{"src":"https://www.googletagmanager.com/gtag/js?id=G-N3DJ3JTVT2"}],["$","$L6",null,{"id":"google-analytics","children":"\n          window.dataLayer = window.dataLayer || [];\n          function gtag(){dataLayer.push(arguments);}\n          gtag('js', new Date());\n        \n          gtag('config', 'G-N3DJ3JTVT2');\n        "}],["$","body",null,{"className":"__className_36bd41","children":[["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}],["$","$L7",null,{}]]}]]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/aae87c042353adfd.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:I[2612,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
a:I[4306,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
b:I[231,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],""]
c:I[4254,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
e:I[3869,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
f:I[5339,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"Waline"]
10:I[8360,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
11:I[4226,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
d:T2759,
    <p class="time">发布时间：<time datetime="06 October, 2022">2022-10-06 17:16:18</time></p>
    <p class="words">本文字数：1,194 字       阅读完需：约 4 分钟</p>
    <h2>jackson maven 依赖</h2>
<p>pom.xml</p>
<pre><code class="language-xml">    &#x3C;dependency>
      &#x3C;groupId>com.fasterxml.jackson.core&#x3C;/groupId>
      &#x3C;artifactId>jackson-databind&#x3C;/artifactId>
      &#x3C;version>2.9.6&#x3C;/version>
    &#x3C;/dependency>

    &#x3C;dependency>
      &#x3C;groupId>com.fasterxml.jackson.core&#x3C;/groupId>
      &#x3C;artifactId>jackson-core&#x3C;/artifactId>
      &#x3C;version>2.9.6&#x3C;/version>
    &#x3C;/dependency>

    &#x3C;dependency>
      &#x3C;groupId>com.fasterxml.jackson.core&#x3C;/groupId>
      &#x3C;artifactId>jackson-annotations&#x3C;/artifactId>
      &#x3C;version>2.9.6&#x3C;/version>
    &#x3C;/dependency>
</code></pre>
<h3>MappingJackson2HttpMessageConverter</h3>
<p>MappingJackson2HttpMessageConverter的意义是使用jackson处理controller层的返回值，将返回对象自动转为json字符串</p>
<p>spring-mvc.xml</p>
<pre><code class="language-xml">    &#x3C;!--开启RequestMapping映射处理器和适配器-->
    &#x3C;mvc:annotation-driven>
        &#x3C;mvc:message-converters>
            &#x3C;bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                &#x3C;property name="supportedMediaTypes">
                    &#x3C;list>
                        &#x3C;value>text/html;charset=utf-8&#x3C;/value>
                    &#x3C;/list>
                &#x3C;/property>
            &#x3C;/bean>
        &#x3C;/mvc:message-converters>
    &#x3C;/mvc:annotation-driven>
</code></pre>
<p>配置完MappingJackson2HttpMessageConverter消息转换器后，只需要将controller层返回值改为ajaxresult对象即可，如下所示</p>
<pre><code class="language-java">package com.zr.controller.sys;

import com.alibaba.fastjson.JSON;
import com.zr.service.sys.SysUserService;
import com.zr.utils.AjaxResult;
import com.zr.vo.sys.SysUser;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/sys/user")
public class SysUserController {

    @Autowired
    private SysUserService sysUserService;

    @PostMapping("/login.action")
    public AjaxResult login(@RequestBody SysUser sysUser){
        SysUser user = sysUserService.login(sysUser);
        AjaxResult ajaxResult = null;
        if(user != null) {
            ajaxResult = AjaxResult.success(200,"登录成功", user);
        }else{
            ajaxResult = AjaxResult.fail(200,"账号或密码错误", null);
        }
         return ajaxResult;
    }

}
</code></pre>
<h3>jsonformat注解</h3>
<p>加在vo层</p>
<pre><code class="language-java">    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    public Date getCreateTime() {
        return createTime;
    }
</code></pre>
<h2>redis 基础</h2>
<h3>Redis数据类型</h3>
<ol>
<li>string（字符串）</li>
<li>hash（哈希）</li>
<li>list（列表）</li>
<li>set（集合</li>
<li>zset(sorted set：有序集合)</li>
</ol>
<h3>操作命令</h3>
<ol>
<li><code>select index</code> 选取数据库 index 0-15</li>
<li><code>Keys *</code> 查看所有的值</li>
<li><code>Del key</code> 删除指定的key</li>
<li><code>PEXPIRE key milliseconds</code> 设置key的过期时间 毫秒单位</li>
<li><code>Pttl key</code> 获取key的剩余过期时间</li>
<li><code>PERSIST key</code> 移除key的过期时间 将永久保存</li>
<li><code>set key value</code> 设置键值</li>
<li><code>get key</code> 获取键值</li>
</ol>
<h3>Hash类型</h3>
<p>Redis hash 是一个 string 类型的 field（字段） 和 value（值） 的映射表，hash 特别适合用于存储对象GET key 获取指定key的value<br>
Redis 中每个 hash 可以存储 232 - 1 键值对（40多亿）</p>
<ol>
<li><code>HMSET key field value field value …</code> 设置key及hash字段和值</li>
<li><code>HGETALL key</code> 获取在哈希表中指定 key 的所有字段和值</li>
<li><code>HGET key field</code> 获取存储在哈希表中指定字段的值</li>
<li><code>HDEL key field1 [field2]</code> 删除一个或多个哈希表字段</li>
</ol>
<h3>List类型</h3>
<p>Redis列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）<br>
一个列表最多可以包含 232 - 1 个元素 (4294967295, 每个列表超过40亿个元素)。</p>
<ol>
<li><code>LPUSH key value</code>  将一个值插入到已存在的列表头部</li>
<li><code>LLEN key</code> 获取列表长度</li>
<li><code>LINDEX key index</code> 通过索引获取列表中的元素</li>
<li><code>LRANGE key start stop</code> 获取列表指定范围内的元素</li>
</ol>
<h3>Set类型</h3>
<p>Redis 的 Set 是 String 类型的无序集合。集合成员是唯一的，这就意味着集合中不能出现重复的数据。</p>
<ol>
<li><code>SADD key member1 [member2]</code> 向集合添加一个或多个成员</li>
<li><code>SCARD key</code> 获取集合的成员数</li>
<li><code>SMEMBERS key</code> 返回集合中的所有成员</li>
<li><code>SREM key member1 [member2]</code> 移除集合中一个或多个成员</li>
</ol>
<h3>Sorted set类型</h3>
<p>Redis 有序集合和集合一样也是 string 类型元素的集合,且不允许重复的成员。<br>
不同的是每个元素都会关联一个 double 类型的分数。redis 正是通过分数来为集合中的成员进行从小到大的排序，有序集合的成员是唯一的,但分数(score)却可以重复。</p>
<ol>
<li><code>ZADD key score1 member1 [score2 member2]</code>向有序集合添加一个或多个成员，或者更新已存在成员的分数</li>
<li><code>ZCARD key</code>获取有序集合的成员数</li>
<li><code>ZRANGE key start stop [WITHSCORES]</code>通过索引区间返回有序集合指定区间内的成员</li>
<li><code>ZREM key member [member ...]</code>移除有序集合中的一个或多个成员</li>
</ol>
<h2>redis java 连接</h2>
<p>pom.xml</p>
<pre><code class="language-xml">    &#x3C;dependency>
      &#x3C;groupId>redis.clients&#x3C;/groupId>
      &#x3C;artifactId>jedis&#x3C;/artifactId>
      &#x3C;version>3.6.0&#x3C;/version>
    &#x3C;/dependency>
</code></pre>
<p>连接测试</p>
<pre><code class="language-java">    @Test
    public void testRedis(){
        Jedis jedis = new Jedis(new HostAndPort("127.0.0.1", 6379));
        System.out.println(jedis.ping());
        jedis.set("city", "长春");
        System.out.println(jedis.get("city"));
        jedis.close();
    }
</code></pre>
<p><code>transient</code> 关键字表示该属性不会被序列化</p>
<p>User.java</p>
<pre><code class="language-java">package com.zr.vo;

import java.io.Serializable;

public class User implements Serializable {
    private String userId;
    private String userName;
//    transient 关键字表示该属性不会被序列化
    private transient String password;

    public String getUserId() {
        return userId;
    }

    public void setUserId(String userId) {
        this.userId = userId;
    }

    public String getUserName() {
        return userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }
}
</code></pre>
<p>SerializableUtil.java</p>
<pre><code class="language-java">package com.zr.utils;

import java.io.*;

public class SerializableUtil {
    public static byte[] serializable(Object object) throws IOException {
        ByteArrayOutputStream bao = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(bao);
        oos.writeObject(object);
        oos.flush();
        return bao.toByteArray();
    }
    public static Object unSerializable(byte[] bytes) throws IOException, ClassNotFoundException {
        ByteArrayInputStream bai = new ByteArrayInputStream(bytes);
        ObjectInputStream ois = new ObjectInputStream(bai);
        return ois.readObject();
    }
}
</code></pre>
<p>AppTest.java</p>
<pre><code class="language-java">package com.zr;

import static org.junit.Assert.assertTrue;

import com.zr.utils.SerializableUtil;
import com.zr.vo.User;
import org.junit.Test;
import redis.clients.jedis.HostAndPort;
import redis.clients.jedis.Jedis;

import java.io.IOException;

/**
 * Unit test for simple App.
 */
public class AppTest 
{
    @Test
    public void testRedis() throws IOException, ClassNotFoundException {
        Jedis jedis = new Jedis(new HostAndPort("127.0.0.1", 6379));
        System.out.println(jedis.ping());
        User user = new User();
//        user.setUserId("admin");
//        user.setUserName("管理员");
//        user.setPassword("1234");
//        jedis.set("yonghu".getBytes(), SerializableUtil.serializable(user));
        Object obj = SerializableUtil.unSerializable(jedis.get("yonghu".getBytes()));
        if(obj.getClass().getName().contains("User")){
            user = (User) obj;
        }
        System.out.println(user.getUserName());
        jedis.close();

    }
}
</code></pre>
<h2>redis持久化</h2>
<h3>RDB方式</h3>
<p>redis database</p>
<p>会丢失最后一次的更改</p>
<p>二进制文件保存 速度快 快照</p>
<pre><code class="language-conf"># 900秒之内1次更改
save 900 1
save 300 10
save 60 10000
</code></pre>
<h3>AOF方式</h3>
<p>append only file</p>
<p>保存运行的命令，每次运行时重新执行一遍所有命令<br>
速度慢</p>
<h2>redis常见问题</h2>
<ol>
<li>缓存穿透<br>
查询多次数据库不存在的对象，会对数据库造成压力。<br>
解决方法：数据库返回空对象，存入缓存</li>
<li>缓存击穿<br>
大量请求查询同一个key，缓存过期后给数据库造成压力</li>
<li>缓存雪崩<br>
大量请求查询不同key</li>
</ol>

  2:["$","div",null,{"className":"article_pageBody__Bryg4","children":[["$","$L9",null,{"menuItemList":[{"id":0,"label":"首页","href":"/","icon":"/icons/home_gray.svg","iconSelected":"/icons/home_black.svg"},{"id":1,"label":"文章","href":"/articles/all/1","icon":"/icons/article_gray.svg","iconSelected":"/icons/article_black.svg"},{"id":3,"label":"关于","href":"/about","icon":"/icons/about_gray.svg","iconSelected":"/icons/about_black.svg"},{"id":4,"label":"搜索","href":"/search","icon":"/icons/search_gray.svg","iconSelected":"/icons/search_black.svg"}],"currentSelectedLabel":"文章"}],["$","div",null,{"className":"article_pageBodyMain___x_AF","children":[["$","$La",null,{}],["$","div",null,{"className":"article_articleContainer__uRwUh scrollContent","children":[["$","div",null,{"className":"article_articleBody__0coIY scrollContent","children":[["$","h1",null,{"style":{"marginBottom":"0.1rem","marginTop":"0.2rem"},"children":"10月6日后端学习笔记(数据库)"}],["$","div",null,{"children":[["$","div",null,{"className":"tags_tags__qM_Ja","children":[["$","p",null,{"className":"tags_label__Rg6b2","children":"分类"}],[["$","$Lb","0",{"href":"/articles/新知笔记/1","children":["$","p","0",{"className":"tags_tag__HZYxk tags_tagLink__gnw9V","children":"新知笔记"}]}],["$","$Lb","1",{"href":"/articles/后端学习/1","children":["$","p","1",{"className":"tags_tag__HZYxk tags_tagLink__gnw9V","children":"后端学习"}]}]],false]}],["$","div",null,{"className":"tags_tags__qM_Ja","children":[["$","p",null,{"className":"tags_label__Rg6b2","children":"标签"}],"$undefined",[["$","p","0",{"className":"tags_tag__HZYxk ","children":"mybatis"}],["$","p","1",{"className":"tags_tag__HZYxk ","children":"mysql"}],["$","p","2",{"className":"tags_tag__HZYxk ","children":"数据库"}],["$","p","3",{"className":"tags_tag__HZYxk ","children":"redis"}],["$","p","4",{"className":"tags_tag__HZYxk ","children":"缓存"}]]]}],["$","$Lc",null,{"path":"10%E6%9C%886%E6%97%A5%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E5%BA%93","serverURL":"https://remark.timeshike.com/"}]]}],["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$d"}}],["$","$Le",null,{}],["$","$Lf",null,{"path":"10%E6%9C%886%E6%97%A5%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E5%BA%93","serverURL":"https://remark.timeshike.com/","lang":"zh-CN"}],["$","div",null,{"className":"bottomBar_bottomBar__uHU1W","children":["$","div",null,{"className":"bottomBar_text__iz3cM","children":["Powerd by",["$","a",null,{"href":"https://github.com/hixyl/YlBlog","target":"_blank","children":" YlBlog(玉龙博客)"}]]}]}]]}],["$","$L10",null,{}]]}]]}],["$","$L11",null,{}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"10月6日后端学习笔记(数据库) - 流年石刻"}],["$","meta","3",{"name":"next-size-adjust"}]]
1:null
