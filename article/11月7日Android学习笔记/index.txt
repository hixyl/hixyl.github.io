1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/4889457fae64fbaf.css",{"as":"style"}]
0:["rzM6RvxqX1p23emT7WN45",[[["",{"children":["article",{"children":[["id","11%E6%9C%887%E6%97%A5Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0","d"],{"children":["__PAGE__?{\"id\":\"11月7日Android学习笔记\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/4889457fae64fbaf.css","precedence":"next"}]],"$L4"]]]]
5:HL["/_next/static/css/b4d4f9fffc1492fd.css",{"as":"style"}]
6:HL["/_next/static/css/99f6a99e5e57ec87.css",{"as":"style"}]
7:I{"id":3015,"chunks":["185:static/chunks/app/layout-310f4f1110904b4e.js"],"name":"","async":false}
8:I{"id":7767,"chunks":["272:static/chunks/webpack-6827bbf664db4492.js","971:static/chunks/fd9d1056-2a48348db6e9e5e0.js","596:static/chunks/596-38dca328e8a8de9d.js"],"name":"default","async":false}
9:I{"id":7920,"chunks":["272:static/chunks/webpack-6827bbf664db4492.js","971:static/chunks/fd9d1056-2a48348db6e9e5e0.js","596:static/chunks/596-38dca328e8a8de9d.js"],"name":"default","async":false}
b:I{"id":5345,"chunks":["185:static/chunks/app/layout-310f4f1110904b4e.js"],"name":"","async":false}
3:[["$","html",null,{"lang":"zh","children":[["$","link",null,{"rel":"icon","href":"/favicon.png?<generated>","type":"image/<generated>","sizes":"<generated>"}],["$","$L7",null,{"src":"https://www.googletagmanager.com/gtag/js?id=G-N3DJ3JTVT2"}],["$","$L7",null,{"id":"google-analytics","children":"\n          window.dataLayer = window.dataLayer || [];\n          function gtag(){dataLayer.push(arguments);}\n          gtag('js', new Date());\n        \n          gtag('config', 'G-N3DJ3JTVT2');\n        "}],["$","body",null,{"className":"__className_aaf875","children":[["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","article","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","article","children",["id","11%E6%9C%887%E6%97%A5Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$La",null],"segment":"__PAGE__?{\"id\":\"11月7日Android学习笔记\"}"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/b4d4f9fffc1492fd.css","precedence":"next"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/99f6a99e5e57ec87.css","precedence":"next"}]]}],"segment":["id","11%E6%9C%887%E6%97%A5Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0","d"]},"styles":[]}],"segment":"article"},"styles":[]}],["$","$Lb",null,{}]]}]]}],null]
c:I{"id":4733,"chunks":["577:static/chunks/221e729c-4a54b4fe5604a5c1.js","231:static/chunks/9316e0b3-dfc595e0ff39c618.js","165:static/chunks/165-9f67d2f80e9188a0.js","681:static/chunks/681-e2d1e0d67cbf2503.js","945:static/chunks/945-dd57d3732d1beca5.js","241:static/chunks/app/article/[id]/page-c217b84edbde72da.js"],"name":"","async":false}
d:I{"id":6697,"chunks":["577:static/chunks/221e729c-4a54b4fe5604a5c1.js","231:static/chunks/9316e0b3-dfc595e0ff39c618.js","165:static/chunks/165-9f67d2f80e9188a0.js","681:static/chunks/681-e2d1e0d67cbf2503.js","945:static/chunks/945-dd57d3732d1beca5.js","241:static/chunks/app/article/[id]/page-c217b84edbde72da.js"],"name":"","async":false}
e:I{"id":6685,"chunks":["577:static/chunks/221e729c-4a54b4fe5604a5c1.js","231:static/chunks/9316e0b3-dfc595e0ff39c618.js","165:static/chunks/165-9f67d2f80e9188a0.js","681:static/chunks/681-e2d1e0d67cbf2503.js","945:static/chunks/945-dd57d3732d1beca5.js","241:static/chunks/app/article/[id]/page-c217b84edbde72da.js"],"name":"","async":false}
f:I{"id":9777,"chunks":["577:static/chunks/221e729c-4a54b4fe5604a5c1.js","231:static/chunks/9316e0b3-dfc595e0ff39c618.js","165:static/chunks/165-9f67d2f80e9188a0.js","681:static/chunks/681-e2d1e0d67cbf2503.js","945:static/chunks/945-dd57d3732d1beca5.js","241:static/chunks/app/article/[id]/page-c217b84edbde72da.js"],"name":"","async":false}
11:I{"id":5529,"chunks":["577:static/chunks/221e729c-4a54b4fe5604a5c1.js","231:static/chunks/9316e0b3-dfc595e0ff39c618.js","165:static/chunks/165-9f67d2f80e9188a0.js","681:static/chunks/681-e2d1e0d67cbf2503.js","945:static/chunks/945-dd57d3732d1beca5.js","241:static/chunks/app/article/[id]/page-c217b84edbde72da.js"],"name":"","async":false}
12:I{"id":1848,"chunks":["577:static/chunks/221e729c-4a54b4fe5604a5c1.js","231:static/chunks/9316e0b3-dfc595e0ff39c618.js","165:static/chunks/165-9f67d2f80e9188a0.js","681:static/chunks/681-e2d1e0d67cbf2503.js","945:static/chunks/945-dd57d3732d1beca5.js","241:static/chunks/app/article/[id]/page-c217b84edbde72da.js"],"name":"Waline","async":false}
13:I{"id":2953,"chunks":["577:static/chunks/221e729c-4a54b4fe5604a5c1.js","231:static/chunks/9316e0b3-dfc595e0ff39c618.js","165:static/chunks/165-9f67d2f80e9188a0.js","681:static/chunks/681-e2d1e0d67cbf2503.js","945:static/chunks/945-dd57d3732d1beca5.js","241:static/chunks/app/article/[id]/page-c217b84edbde72da.js"],"name":"","async":false}
14:I{"id":633,"chunks":["577:static/chunks/221e729c-4a54b4fe5604a5c1.js","231:static/chunks/9316e0b3-dfc595e0ff39c618.js","165:static/chunks/165-9f67d2f80e9188a0.js","681:static/chunks/681-e2d1e0d67cbf2503.js","945:static/chunks/945-dd57d3732d1beca5.js","241:static/chunks/app/article/[id]/page-c217b84edbde72da.js"],"name":"","async":false}
10:Tb5f2,
    <p class="time">发布时间：<time datetime="07 November, 2022">2022-11-07 16:44:56</time></p>
    <p class="words">本文字数：1,200 字       阅读完需：约 7 分钟</p>
    <html><head></head><body><h2>自定义控件</h2>
<p>title_layout.xml</p>
<pre><code class="language-xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">"1.0"</span> encoding=<span class="hljs-string">"utf-8"</span>?&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">RelativeLayout</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">"http://schemas.android.com/apk/res/android"</span>
    <span class="hljs-attr">android:id</span>=<span class="hljs-string">"@+id/titleviews"</span>
    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">"match_parent"</span>
    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">"60dp"</span>
    <span class="hljs-attr">android:background</span>=<span class="hljs-string">"@color/purple_200"</span>&gt;</span>

    <span class="hljs-tag">&lt;<span class="hljs-name">ImageView</span>
        <span class="hljs-attr">android:id</span>=<span class="hljs-string">"@+id/title_iv_left"</span>
        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">"wrap_content"</span>
        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">"match_parent"</span>
        <span class="hljs-attr">android:layout_marginLeft</span>=<span class="hljs-string">"10dp"</span>
        <span class="hljs-attr">android:src</span>=<span class="hljs-string">"@mipmap/icon_back"</span>/&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">ImageView</span>
        <span class="hljs-attr">android:id</span>=<span class="hljs-string">"@+id/title_iv_right"</span>
        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">"wrap_content"</span>
        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">"match_parent"</span>
        <span class="hljs-attr">android:layout_marginRight</span>=<span class="hljs-string">"10dp"</span>
        <span class="hljs-attr">android:layout_alignParentRight</span>=<span class="hljs-string">"true"</span>
        <span class="hljs-attr">android:src</span>=<span class="hljs-string">"@mipmap/icon_setting"</span>/&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span>
        <span class="hljs-attr">android:id</span>=<span class="hljs-string">"@+id/title_tv"</span>
        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">"wrap_content"</span>
        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">"wrap_content"</span>
        <span class="hljs-attr">android:text</span>=<span class="hljs-string">"标题"</span>
        <span class="hljs-attr">android:layout_centerInParent</span>=<span class="hljs-string">"true"</span>
        <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">"20sp"</span>/&gt;</span>

<span class="hljs-tag">&lt;/<span class="hljs-name">RelativeLayout</span>&gt;</span>
</code></pre>
<p>TitleView.java</p>
<pre><code class="language-java">package com.<span class="hljs-property">xyl</span>.<span class="hljs-property">app1105</span>.<span class="hljs-property">view</span>;
<span class="hljs-keyword">import</span> android.<span class="hljs-property">app</span>.<span class="hljs-property">Activity</span>;
<span class="hljs-keyword">import</span> android.<span class="hljs-property">content</span>.<span class="hljs-property">Context</span>;
<span class="hljs-keyword">import</span> android.<span class="hljs-property">util</span>.<span class="hljs-property">AttributeSet</span>;
<span class="hljs-keyword">import</span> android.<span class="hljs-property">view</span>.<span class="hljs-property">LayoutInflater</span>;
<span class="hljs-keyword">import</span> android.<span class="hljs-property">view</span>.<span class="hljs-property">View</span>;
<span class="hljs-keyword">import</span> android.<span class="hljs-property">widget</span>.<span class="hljs-property">ImageView</span>;
<span class="hljs-keyword">import</span> android.<span class="hljs-property">widget</span>.<span class="hljs-property">RelativeLayout</span>;
<span class="hljs-keyword">import</span> android.<span class="hljs-property">widget</span>.<span class="hljs-property">TextView</span>;

<span class="hljs-keyword">import</span> com.<span class="hljs-property">xyl</span>.<span class="hljs-property">app1105</span>.<span class="hljs-property">R</span>;


<span class="hljs-comment">/**
 * 作者：animee on 2022/11/5 17:07
 * 接口回调：
 * 当这个类的某项事件由它触发，但是功能不是由它决定，就可以用接口回调解决。
 * 1. 创建接口，编写回调方法
 * 2. 在这个类中，将接口设置为成员变量，然后通过set方法对其进行赋值
 * 3. 在被触发的地方调用这个接口的方法
 */</span>
<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TitleView</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">RelativeLayout</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">View</span>.<span class="hljs-property">OnClickListener</span> {
    <span class="hljs-title class_">ImageView</span> leftIv,rightIv;
    <span class="hljs-title class_">TextView</span> titleTv;
    <span class="hljs-title class_">RelativeLayout</span> layout;

    <span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">OnClickImgListener</span>{
        <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">onClick</span>(<span class="hljs-title class_">View</span> view);
    }
    <span class="hljs-title class_">OnClickImgListener</span> leftListener, rightListener;
    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setOnClickLeftImgListener</span>(<span class="hljs-params">OnClickImgListener leftListener</span>){
        <span class="hljs-variable language_">this</span>.<span class="hljs-property">leftListener</span> = leftListener;
    }
    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setOnClickRightImgListener</span>(<span class="hljs-params">OnClickImgListener rightListener</span>){
        <span class="hljs-variable language_">this</span>.<span class="hljs-property">rightListener</span> = rightListener;
    }

    <span class="hljs-comment">// 在代码当中创建view对象时，会调用的构造方法</span>
    <span class="hljs-keyword">public</span> <span class="hljs-title class_">TitleView</span>(<span class="hljs-title class_">Context</span> context) {
        <span class="hljs-title function_">this</span>(context,<span class="hljs-literal">null</span>);
    }
    <span class="hljs-comment">// 在布局当中写view对象时，会调用的构造方法</span>
    <span class="hljs-keyword">public</span> <span class="hljs-title class_">TitleView</span>(<span class="hljs-title class_">Context</span> context, <span class="hljs-title class_">AttributeSet</span> attrs) {
        <span class="hljs-variable language_">super</span>(context, attrs);
        <span class="hljs-title class_">LayoutInflater</span>.<span class="hljs-title function_">from</span>(context).<span class="hljs-title function_">inflate</span>(R.<span class="hljs-property">layout</span>.<span class="hljs-property">title_layout</span>,<span class="hljs-variable language_">this</span>);
        <span class="hljs-title function_">initView</span>();
        <span class="hljs-title function_">setEvent</span>();
    }

    <span class="hljs-keyword">private</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setEvent</span>(<span class="hljs-params"></span>) {
        leftIv.<span class="hljs-title function_">setOnClickListener</span>(<span class="hljs-variable language_">this</span>);
        rightIv.<span class="hljs-title function_">setOnClickListener</span>(<span class="hljs-variable language_">this</span>);
    }

    <span class="hljs-keyword">private</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">initView</span>(<span class="hljs-params"></span>) {
        leftIv = <span class="hljs-title function_">findViewById</span>(R.<span class="hljs-property">id</span>.<span class="hljs-property">title_iv_left</span>);
        rightIv = <span class="hljs-title function_">findViewById</span>(R.<span class="hljs-property">id</span>.<span class="hljs-property">title_iv_right</span>);
        titleTv = <span class="hljs-title function_">findViewById</span>(R.<span class="hljs-property">id</span>.<span class="hljs-property">title_tv</span>);
        layout = <span class="hljs-title function_">findViewById</span>(R.<span class="hljs-property">id</span>.<span class="hljs-property">titleviews</span>);
    }
    <span class="hljs-comment">/** 设置标题*/</span>
    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setTitle</span>(<span class="hljs-params"><span class="hljs-built_in">String</span> title</span>){
        titleTv.<span class="hljs-title function_">setText</span>(title);
    }
    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setTitle</span>(<span class="hljs-params">int titleId</span>){
        titleTv.<span class="hljs-title function_">setText</span>(titleId);
    }
    <span class="hljs-comment">/** 设置标题颜色*/</span>
    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setTitleColor</span>(<span class="hljs-params">int color</span>){
        titleTv.<span class="hljs-title function_">setTextColor</span>(color);
    }
    <span class="hljs-comment">/** 设置背景颜色*/</span>
    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setBgResource</span>(<span class="hljs-params">int color</span>){
        layout.<span class="hljs-title function_">setBackgroundResource</span>(color);
    }
    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setBgColor</span>(<span class="hljs-params">int color</span>){
        layout.<span class="hljs-title function_">setBackgroundColor</span>(color);
    }

    <span class="hljs-comment">/** 设置是否显示左右图片*/</span>
    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setVisibleImg</span>(<span class="hljs-params">int left,int right</span>){
        leftIv.<span class="hljs-title function_">setVisibility</span>(left);
        rightIv.<span class="hljs-title function_">setVisibility</span>(right);
    }

    <span class="hljs-comment">/** 修改左边显示图片*/</span>
    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setLeftImgResource</span>(<span class="hljs-params">int resId</span>){
        leftIv.<span class="hljs-title function_">setImageResource</span>(resId);
    }
    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setRightImgResource</span>(<span class="hljs-params">int resId</span>){
        rightIv.<span class="hljs-title function_">setImageResource</span>(resId);
    }

    <span class="hljs-meta">@Override</span>
    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">onClick</span>(<span class="hljs-params">View view</span>) {
        <span class="hljs-keyword">switch</span> (view.<span class="hljs-title function_">getId</span>()) {
            <span class="hljs-keyword">case</span> R.<span class="hljs-property">id</span>.<span class="hljs-property">title_iv_left</span>:
<span class="hljs-comment">//                ((Activity)getContext()).finish();</span>
                <span class="hljs-keyword">if</span>(leftListener != <span class="hljs-literal">null</span>){
                    leftListener.<span class="hljs-title function_">onClick</span>(view);
                }
                <span class="hljs-keyword">break</span>;
            <span class="hljs-keyword">case</span> R.<span class="hljs-property">id</span>.<span class="hljs-property">title_iv_right</span>:
                <span class="hljs-keyword">if</span>(rightListener!=<span class="hljs-literal">null</span>){
                    rightListener.<span class="hljs-title function_">onClick</span>(view);
                }
                <span class="hljs-keyword">break</span>;
        }
    }
}

</code></pre>
<h2>对话框</h2>
<ol>
<li>新建AlertDialog.Builder对象<br>
<code>AlertDialog.Builder builder = <span class="hljs-keyword">new</span> <span class="hljs-type">AlertDialog</span>.Builder(<span class="hljs-built_in">this</span>);</code></li>
<li>设置一些属性<br>
<code>builder.setXXX<span class="hljs-comment">()</span></code></li>
<li><code>builder.create<span class="hljs-comment">()</span>.show<span class="hljs-comment">()</span>;</code></li>
</ol>
<h3>简单对话框</h3>
<pre><code class="language-java">    <span class="hljs-comment">/**
     * 最简单的对话框: 确认对话框
     */</span>
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">simpleDialog</span><span class="hljs-params">()</span> {
        <span class="hljs-comment">//1. 创建对话框的装饰对象</span>
        AlertDialog.<span class="hljs-type">Builder</span> <span class="hljs-variable">builder</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AlertDialog</span>.Builder(<span class="hljs-built_in">this</span>);
        <span class="hljs-comment">//2. 设置显示内容</span>
        builder.setIcon(R.mipmap.jvxie)
                .setTitle(<span class="hljs-string">"提示信息"</span>)
                .setMessage(<span class="hljs-string">"您确定要退出当前页面吗"</span>)
                <span class="hljs-comment">//右边按钮</span>
                .setPositiveButton(<span class="hljs-string">"取消"</span>, <span class="hljs-literal">null</span>)
                <span class="hljs-comment">//左边按钮</span>
                .setNegativeButton(<span class="hljs-string">"确定"</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">DialogInterface</span>.OnClickListener() {
                    <span class="hljs-meta">@Override</span>
                    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onClick</span><span class="hljs-params">(DialogInterface dialog, <span class="hljs-type">int</span> which)</span> {
                        finish();
                    }
                });
        <span class="hljs-comment">//3. 获取对话框对象</span>
        <span class="hljs-type">AlertDialog</span> <span class="hljs-variable">dialog</span> <span class="hljs-operator">=</span> builder.create();
        dialog.show();
    }
</code></pre>
<h3>单选对话框</h3>
<pre><code class="language-java">    <span class="hljs-comment">/**
     * 单选按钮的对话框
     */</span>
    <span class="hljs-keyword">private</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">singleDialog</span>(<span class="hljs-params"></span>) {
        <span class="hljs-title class_">String</span> [] arr = {<span class="hljs-string">"男"</span>, <span class="hljs-string">"女"</span>, <span class="hljs-string">"其他"</span>};
        <span class="hljs-comment">//1. 创建对话框的装饰对象</span>
        <span class="hljs-title class_">AlertDialog</span>.<span class="hljs-property">Builder</span> builder = <span class="hljs-keyword">new</span> <span class="hljs-title class_">AlertDialog</span>.<span class="hljs-title class_">Builder</span>(<span class="hljs-variable language_">this</span>);
        builder.<span class="hljs-title function_">setIcon</span>(R.<span class="hljs-property">mipmap</span>.<span class="hljs-property">baiyang</span>)
                .<span class="hljs-title function_">setTitle</span>(<span class="hljs-string">"请选择您的性别"</span>)
                .<span class="hljs-title function_">setSingleChoiceItems</span>(arr, <span class="hljs-number">0</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">DialogInterface</span>.<span class="hljs-title class_">OnClickListener</span>() {
                    <span class="hljs-meta">@Override</span>
                    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">onClick</span>(<span class="hljs-params">DialogInterface dialog, int which</span>) {
                        <span class="hljs-title function_">showToast</span>(<span class="hljs-string">"您选择了性别: "</span> + arr[which]);
                        <span class="hljs-comment">//取消对话框</span>
                        dialog.<span class="hljs-title function_">cancel</span>();
                    }
                });
        builder.<span class="hljs-title function_">create</span>().<span class="hljs-title function_">show</span>();
    }

    <span class="hljs-keyword">private</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">showToast</span>(<span class="hljs-params"><span class="hljs-built_in">String</span> s</span>) {
        <span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">makeText</span>(<span class="hljs-variable language_">this</span>, s, <span class="hljs-title class_">Toast</span>.<span class="hljs-property">LENGTH_SHORT</span>).<span class="hljs-title function_">show</span>();
    }
</code></pre>
<h3>列表对话框</h3>
<pre><code class="language-java">    <span class="hljs-keyword">private</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">listDialog</span>(<span class="hljs-params"></span>) {
        <span class="hljs-title class_">ArrayAdapter</span>&lt;<span class="hljs-title class_">String</span>&gt; adapter = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayAdapter</span>&lt;&gt;(<span class="hljs-variable language_">this</span>, android.<span class="hljs-property">R</span>.<span class="hljs-property">layout</span>.<span class="hljs-property">simple_list_item_1</span>, mDatas);
        <span class="hljs-title class_">AlertDialog</span>.<span class="hljs-property">Builder</span> builder = <span class="hljs-keyword">new</span> <span class="hljs-title class_">AlertDialog</span>.<span class="hljs-title class_">Builder</span>(<span class="hljs-variable language_">this</span>);
        builder.<span class="hljs-title function_">setIcon</span>(R.<span class="hljs-property">mipmap</span>.<span class="hljs-property">jinniu</span>)
                .<span class="hljs-title function_">setTitle</span>(<span class="hljs-string">"请选择您的学校科目"</span>)
                .<span class="hljs-title function_">setAdapter</span>(adapter, <span class="hljs-keyword">new</span> <span class="hljs-title class_">DialogInterface</span>.<span class="hljs-title class_">OnClickListener</span>() {
                    <span class="hljs-meta">@Override</span>
                    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">onClick</span>(<span class="hljs-params">DialogInterface dialog, int which</span>) {
                        <span class="hljs-title function_">showToast</span>(<span class="hljs-string">"您选择了: "</span> + mDatas.<span class="hljs-title function_">get</span>(which));
                    }
                });
        builder.<span class="hljs-title function_">create</span>().<span class="hljs-title function_">show</span>();
    }
</code></pre>
<h3>多选按钮对话框</h3>
<pre><code class="language-java"> <span class="hljs-title class_">String</span> mArr[] = {<span class="hljs-string">"JAVA"</span>, <span class="hljs-string">"Android"</span>, <span class="hljs-string">"C"</span>, <span class="hljs-string">"C++"</span>, <span class="hljs-string">"Python"</span>, <span class="hljs-string">"数据运营"</span>, <span class="hljs-string">"算法"</span>, <span class="hljs-string">"数据结构"</span>, <span class="hljs-string">"C#"</span>};
    <span class="hljs-built_in">boolean</span> bArr[] = {<span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>,<span class="hljs-literal">false</span>,<span class="hljs-literal">false</span>,<span class="hljs-literal">false</span>,<span class="hljs-literal">false</span>,<span class="hljs-literal">false</span>};
    <span class="hljs-comment">/**
     * 多选按钮对话框
     */</span>
    <span class="hljs-keyword">private</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">multiDialog</span>(<span class="hljs-params"></span>) {
        <span class="hljs-title class_">List</span>&lt;<span class="hljs-title class_">String</span>&gt; list = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();
        <span class="hljs-title class_">AlertDialog</span>.<span class="hljs-property">Builder</span> builder = <span class="hljs-keyword">new</span> <span class="hljs-title class_">AlertDialog</span>.<span class="hljs-title class_">Builder</span>(<span class="hljs-variable language_">this</span>);
        builder.<span class="hljs-title function_">setIcon</span>(R.<span class="hljs-property">mipmap</span>.<span class="hljs-property">jinniu</span>)
                .<span class="hljs-title function_">setTitle</span>(<span class="hljs-string">"请选择您的学校科目"</span>)
                .<span class="hljs-title function_">setMultiChoiceItems</span>(mArr, bArr, <span class="hljs-keyword">new</span> <span class="hljs-title class_">DialogInterface</span>.<span class="hljs-title class_">OnMultiChoiceClickListener</span>() {
                    <span class="hljs-meta">@Override</span>
                    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">onClick</span>(<span class="hljs-params">DialogInterface dialog, int which, <span class="hljs-built_in">boolean</span> isChecked</span>) {

                    }
                }).<span class="hljs-title function_">setPositiveButton</span>(<span class="hljs-string">"确定"</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">DialogInterface</span>.<span class="hljs-title class_">OnClickListener</span>() {
                    <span class="hljs-meta">@Override</span>
                    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">onClick</span>(<span class="hljs-params">DialogInterface dialog, int which</span>) {
                        <span class="hljs-keyword">for</span> (int i = <span class="hljs-number">0</span>; i &lt; bArr.<span class="hljs-property">length</span>; i++) {
                            <span class="hljs-keyword">if</span>(bArr[i]){
                                list.<span class="hljs-title function_">add</span>(mArr[i]);
                            }
                        }
                        <span class="hljs-title function_">showToast</span>(<span class="hljs-string">"您选择了: "</span> + list.<span class="hljs-title function_">toString</span>());
                    }
                }).<span class="hljs-title function_">setNegativeButton</span>(<span class="hljs-string">"取消"</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">DialogInterface</span>.<span class="hljs-title class_">OnClickListener</span>() {
                    <span class="hljs-meta">@Override</span>
                    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">onClick</span>(<span class="hljs-params">DialogInterface dialog, int which</span>) {
                        dialog.<span class="hljs-title function_">cancel</span>();
                    }
                });
        builder.<span class="hljs-title function_">create</span>().<span class="hljs-title function_">show</span>();
    }
</code></pre>
<h3>自定义对话框</h3>
<h4>layout/dialog_input.xml</h4>
<pre><code class="language-xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">"1.0"</span> encoding=<span class="hljs-string">"utf-8"</span>?&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">"http://schemas.android.com/apk/res/android"</span>
    <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">"vertical"</span>
    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">"match_parent"</span>
    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">"match_parent"</span>
    <span class="hljs-attr">android:background</span>=<span class="hljs-string">"@color/white"</span>
    <span class="hljs-attr">android:padding</span>=<span class="hljs-string">"20dp"</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span>
        <span class="hljs-attr">android:id</span>=<span class="hljs-string">"@+id/dialog_input_tv1"</span>
        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">"match_parent"</span>
        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">"wrap_content"</span>
        <span class="hljs-attr">android:text</span>=<span class="hljs-string">"备注"</span>
        <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">"26sp"</span>
        <span class="hljs-attr">android:textStyle</span>=<span class="hljs-string">"bold"</span>/&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">EditText</span>
        <span class="hljs-attr">android:id</span>=<span class="hljs-string">"@+id/diput_et1"</span>
        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">"match_parent"</span>
        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">"wrap_content"</span>
        <span class="hljs-attr">android:layout_marginTop</span>=<span class="hljs-string">"20dp"</span>/&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span>
        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">"match_parent"</span>
        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">"wrap_content"</span>
        <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">"horizontal"</span>
        <span class="hljs-attr">android:layout_marginTop</span>=<span class="hljs-string">"20dp"</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">androidx.appcompat.widget.AppCompatButton</span>
            <span class="hljs-attr">android:id</span>=<span class="hljs-string">"@+id/diput_btn1"</span>
            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">"0dp"</span>
            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">"wrap_content"</span>
            <span class="hljs-attr">android:layout_weight</span>=<span class="hljs-string">"1"</span>
            <span class="hljs-attr">android:text</span>=<span class="hljs-string">"取消"</span>
            <span class="hljs-attr">android:background</span>=<span class="hljs-string">"@drawable/bg_btn"</span>/&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">androidx.appcompat.widget.AppCompatButton</span>
            <span class="hljs-attr">android:id</span>=<span class="hljs-string">"@+id/diput_btn2"</span>
            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">"0dp"</span>
            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">"wrap_content"</span>
            <span class="hljs-attr">android:layout_weight</span>=<span class="hljs-string">"1"</span>
            <span class="hljs-attr">android:layout_marginLeft</span>=<span class="hljs-string">"10dp"</span>
            <span class="hljs-attr">android:text</span>=<span class="hljs-string">"确定"</span>
            <span class="hljs-attr">android:background</span>=<span class="hljs-string">"@drawable/bg_btn"</span>/&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span>

<span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span>
</code></pre>
<h4>view/inputMsgDialog.java</h4>
<p>相当于弹出一个小页面，所以与之前自定义view不同的是不需inflate转换成view对象，也因此可以直接在自定义类中调用onClick方法</p>
<pre><code class="language-java">package com.<span class="hljs-property">xyl</span>.<span class="hljs-property">app1107</span>.<span class="hljs-property">view</span>;

<span class="hljs-keyword">import</span> android.<span class="hljs-property">app</span>.<span class="hljs-property">Dialog</span>;
<span class="hljs-keyword">import</span> android.<span class="hljs-property">content</span>.<span class="hljs-property">Context</span>;
<span class="hljs-keyword">import</span> android.<span class="hljs-property">os</span>.<span class="hljs-property">Bundle</span>;
<span class="hljs-keyword">import</span> android.<span class="hljs-property">view</span>.<span class="hljs-property">Gravity</span>;
<span class="hljs-keyword">import</span> android.<span class="hljs-property">view</span>.<span class="hljs-property">View</span>;
<span class="hljs-keyword">import</span> android.<span class="hljs-property">widget</span>.<span class="hljs-property">Button</span>;
<span class="hljs-keyword">import</span> android.<span class="hljs-property">widget</span>.<span class="hljs-property">EditText</span>;
<span class="hljs-keyword">import</span> android.<span class="hljs-property">widget</span>.<span class="hljs-property">TextView</span>;

<span class="hljs-keyword">import</span> androidx.<span class="hljs-property">annotation</span>.<span class="hljs-property">NonNull</span>;

<span class="hljs-keyword">import</span> com.<span class="hljs-property">xyl</span>.<span class="hljs-property">app1107</span>.<span class="hljs-property">R</span>;

<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">InputMsgDialog</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">Dialog</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">View</span>.<span class="hljs-property">OnClickListener</span> {
    <span class="hljs-title class_">EditText</span> inputEt;
    <span class="hljs-title class_">Button</span> rightBtn, leftBtn;
    <span class="hljs-title class_">TextView</span> titleTv;

    <span class="hljs-keyword">public</span> <span class="hljs-title class_">InputMsgDialog</span>(<span class="hljs-meta">@NonNull</span> <span class="hljs-title class_">Context</span> context) {
        <span class="hljs-variable language_">super</span>(context);
    }

    <span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">OnBtnClickListener</span>{
        <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">onBtnClick</span>(int gravity);
    }
    <span class="hljs-title class_">OnBtnClickListener</span> onLeftBtnClickListener, onRightBtnClickListener;

    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setOnLeftBtnCLickListener</span>(<span class="hljs-params">OnBtnClickListener onLeftBtnClickListener</span>){
        <span class="hljs-variable language_">this</span>.<span class="hljs-property">onLeftBtnClickListener</span> = onLeftBtnClickListener;
    }

    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setOnRightBtnClickListener</span>(<span class="hljs-params">OnBtnClickListener onRightBtnClickListener</span>){
        <span class="hljs-variable language_">this</span>.<span class="hljs-property">onRightBtnClickListener</span> = onRightBtnClickListener;
    }


    <span class="hljs-meta">@Override</span>
    <span class="hljs-keyword">protected</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">onCreate</span>(<span class="hljs-params">Bundle savedInstanceState</span>) {
        <span class="hljs-variable language_">super</span>.<span class="hljs-title function_">onCreate</span>(savedInstanceState);
        <span class="hljs-title function_">setContentView</span>(R.<span class="hljs-property">layout</span>.<span class="hljs-property">dialog_input</span>);
        <span class="hljs-title function_">initView</span>();
        <span class="hljs-title function_">setEvent</span>();
    }

    <span class="hljs-keyword">private</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setEvent</span>(<span class="hljs-params"></span>) {
        leftBtn.<span class="hljs-title function_">setOnClickListener</span>(<span class="hljs-variable language_">this</span>);
        rightBtn.<span class="hljs-title function_">setOnClickListener</span>(<span class="hljs-variable language_">this</span>);
    }

    <span class="hljs-keyword">private</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">initView</span>(<span class="hljs-params"></span>) {
        titleTv = <span class="hljs-title function_">findViewById</span>(R.<span class="hljs-property">id</span>.<span class="hljs-property">dialog_input_tv1</span>);
        inputEt = <span class="hljs-title function_">findViewById</span>(R.<span class="hljs-property">id</span>.<span class="hljs-property">diput_et1</span>);
        rightBtn = <span class="hljs-title function_">findViewById</span>(R.<span class="hljs-property">id</span>.<span class="hljs-property">diput_btn1</span>);
        leftBtn = <span class="hljs-title function_">findViewById</span>(R.<span class="hljs-property">id</span>.<span class="hljs-property">diput_btn2</span>);
    }
    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setTitle</span>(<span class="hljs-params"><span class="hljs-built_in">String</span> text</span>){
        titleTv.<span class="hljs-title function_">setText</span>(text);
    }

    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setTitleColor</span>(<span class="hljs-params">int color</span>){
        titleTv.<span class="hljs-title function_">setTextColor</span>(color);
    }

    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setButtonText</span>(<span class="hljs-params"><span class="hljs-built_in">String</span> left, <span class="hljs-built_in">String</span> right</span>){
        leftBtn.<span class="hljs-title function_">setText</span>(left);
        rightBtn.<span class="hljs-title function_">setText</span>(right);
    }
    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setWidth</span>(<span class="hljs-params"></span>){
        <span class="hljs-comment">//得到当前对话框的窗口</span>
        <span class="hljs-title class_">Window</span> <span class="hljs-variable language_">window</span> = <span class="hljs-title function_">getWindow</span>();
        <span class="hljs-comment">//得到窗口的属性对象</span>
        <span class="hljs-title class_">WindowManager</span>.<span class="hljs-property">LayoutParams</span> wlp = <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">getAttributes</span>();
        <span class="hljs-comment">//设置窗口位置</span>
        wlp.<span class="hljs-property">gravity</span> = <span class="hljs-title class_">Gravity</span>.<span class="hljs-property">BOTTOM</span>;
        <span class="hljs-comment">//获取屏幕的宽度</span>
        <span class="hljs-title class_">Display</span> display = <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">getWindowManager</span>().<span class="hljs-title function_">getDefaultDisplay</span>();
        wlp.<span class="hljs-property">width</span> = display.<span class="hljs-title function_">getWidth</span>();
        <span class="hljs-comment">//将背景设置为透明，去除边框</span>
        <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">setBackgroundDrawableResource</span>(android.<span class="hljs-property">R</span>.<span class="hljs-property">color</span>.<span class="hljs-property">transparent</span>);
        <span class="hljs-comment">//设置窗口属性</span>
        <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">setAttributes</span>(wlp);
    }
    <span class="hljs-comment">/**
     * 获取输入内容的函数
     */</span>
    <span class="hljs-keyword">public</span> <span class="hljs-title class_">String</span> <span class="hljs-title function_">getInputMsg</span>(<span class="hljs-params"></span>){
        <span class="hljs-keyword">return</span> inputEt.<span class="hljs-title function_">getText</span>().<span class="hljs-title function_">toString</span>().<span class="hljs-title function_">trim</span>();
    }
    <span class="hljs-meta">@Override</span>
    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">onClick</span>(<span class="hljs-params">View v</span>) {
        <span class="hljs-keyword">switch</span> (v.<span class="hljs-title function_">getId</span>()) {
            <span class="hljs-keyword">case</span> R.<span class="hljs-property">id</span>.<span class="hljs-property">diput_btn1</span>:
                <span class="hljs-keyword">if</span>(onLeftBtnClickListener!=<span class="hljs-literal">null</span>){
                    onLeftBtnClickListener.<span class="hljs-title function_">onBtnClick</span>(<span class="hljs-title class_">Gravity</span>.<span class="hljs-property">LEFT</span>);
                }
                <span class="hljs-title function_">cancel</span>();
                <span class="hljs-keyword">break</span>;
            <span class="hljs-keyword">case</span> R.<span class="hljs-property">id</span>.<span class="hljs-property">diput_btn2</span>:
                <span class="hljs-keyword">if</span> (onRightBtnClickListener!=<span class="hljs-literal">null</span>){
                    onRightBtnClickListener.<span class="hljs-title function_">onBtnClick</span>(<span class="hljs-title class_">Gravity</span>.<span class="hljs-property">RIGHT</span>);
                }
                <span class="hljs-title function_">cancel</span>();
                <span class="hljs-keyword">break</span>;
        }
    }
}
</code></pre>
<h4>使用自己写的dialog</h4>
<pre><code class="language-java">   <span class="hljs-comment">/**
     * 使用自己写的对话框
     */</span>
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">customDialog</span><span class="hljs-params">()</span>{
        <span class="hljs-type">InputMsgDialog</span> <span class="hljs-variable">dialog</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InputMsgDialog</span>(<span class="hljs-built_in">this</span>);
        dialog.show();

        dialog.setTitle(<span class="hljs-string">"记录消费信息"</span>);
        dialog.setTitleColor(Color.RED);
        dialog.setWidth();
        dialog.setOnRightBtnClickListener(<span class="hljs-keyword">new</span> <span class="hljs-title class_">InputMsgDialog</span>.OnBtnClickListener() {
            <span class="hljs-meta">@Override</span>
            <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onBtnClick</span><span class="hljs-params">(<span class="hljs-type">int</span> gravity)</span> {
                <span class="hljs-type">String</span> <span class="hljs-variable">inputMsg</span> <span class="hljs-operator">=</span> dialog.getInputMsg();
                tv = findViewById(R.id.tv1);
                tv.setText(inputMsg);
            }
        });
    }
</code></pre>
<h3>日期对话框</h3>
<pre><code class="language-java">  <span class="hljs-comment">/**
     * 显示日期对话框
     */</span>
    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">showDateDialog</span>()</span> {
        Calendar calendar = Calendar.getInstance();
        DatePickerDialog dialog = <span class="hljs-keyword">new</span> DatePickerDialog(<span class="hljs-keyword">this</span>, <span class="hljs-keyword">new</span> DatePickerDialog.OnDateSetListener() {
            @Override
            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onDateSet</span>(<span class="hljs-params">DatePicker view, <span class="hljs-built_in">int</span> year, <span class="hljs-built_in">int</span> month, <span class="hljs-built_in">int</span> dayOfMonth</span>)</span> {
                String msg = year + <span class="hljs-string">"年"</span> + (month+<span class="hljs-number">1</span>) + <span class="hljs-string">"月"</span> + dayOfMonth + <span class="hljs-string">"日"</span>;
                tv.setText(msg);
            }
        }, calendar.<span class="hljs-keyword">get</span>(Calendar.YEAR), calendar.<span class="hljs-keyword">get</span>(Calendar.MONTH), calendar.<span class="hljs-keyword">get</span>(Calendar.DAY_OF_MONTH));
        dialog.show();
    }
</code></pre>
<h3>时间对话框</h3>
<pre><code class="language-java">    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">showTimeDialog</span><span class="hljs-params">()</span> {
        <span class="hljs-type">Calendar</span> <span class="hljs-variable">calendar</span> <span class="hljs-operator">=</span> Calendar.getInstance();
        <span class="hljs-type">TimePickerDialog</span> <span class="hljs-variable">timePickerDialog</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TimePickerDialog</span>(<span class="hljs-built_in">this</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">TimePickerDialog</span>.OnTimeSetListener() {
            <span class="hljs-meta">@Override</span>
            <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onTimeSet</span><span class="hljs-params">(TimePicker view, <span class="hljs-type">int</span> hourOfDay, <span class="hljs-type">int</span> minute)</span> {
                <span class="hljs-type">String</span> <span class="hljs-variable">msg</span> <span class="hljs-operator">=</span> hourOfDay + <span class="hljs-string">":"</span> + minute;
                tv.setText(msg);
            }
        }, calendar.get(Calendar.HOUR_OF_DAY), calendar.get(Calendar.MINUTE), <span class="hljs-literal">true</span>);
        timePickerDialog.show();
    }
</code></pre>
<h3>进度对话框</h3>
<pre><code class="language-java">    <span class="hljs-keyword">int</span> value = <span class="hljs-number">0</span>;
    ProgressDialog dialog;
    Handler <span class="hljs-keyword">handler</span> = <span class="hljs-keyword">new</span> Handler(){
        <span class="hljs-meta">@Override</span>
        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">handleMessage</span><span class="hljs-params">(@NonNull Message msg)</span> </span>{
            <span class="hljs-keyword">super</span>.handleMessage(msg);
            <span class="hljs-keyword">if</span> (value&gt;=<span class="hljs-number">100</span>) {
                dialog.dismiss();
            }
            <span class="hljs-keyword">else</span>{
                value += <span class="hljs-number">1</span>;
                dialog.setProgress(value);
                <span class="hljs-keyword">handler</span>.sendEmptyMessageDelayed(<span class="hljs-number">1</span>, <span class="hljs-number">100</span>);
            }
        }
    };
    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">showProgressDialog</span><span class="hljs-params">()</span> </span>{
        dialog = <span class="hljs-keyword">new</span> ProgressDialog(<span class="hljs-keyword">this</span>);
        dialog.setIcon(R.mipmap.shuiping);
        dialog.setMessage(<span class="hljs-string">"正在加载中...."</span>);
        dialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
        dialog.setMax(<span class="hljs-number">100</span>);
        dialog.show();
        value = <span class="hljs-number">0</span>;
        <span class="hljs-keyword">handler</span>.sendEmptyMessageDelayed(<span class="hljs-number">1</span>, <span class="hljs-number">100</span>);
    }
</code></pre>
</body></html>
  a:["$","div",null,{"className":"article_pageBody__Bryg4","children":[["$","$Lc",null,{"menuItemList":[{"id":0,"label":"首页","href":"/","icon":"/icons/home_gray.svg","iconSelected":"/icons/home_black.svg"},{"id":1,"label":"文章","href":"/articles/all/1","icon":"/icons/article_gray.svg","iconSelected":"/icons/article_black.svg"},{"id":3,"label":"关于","href":"/about","icon":"/icons/about_gray.svg","iconSelected":"/icons/about_black.svg"},{"id":4,"label":"搜索","href":"/search","icon":"/icons/search_gray.svg","iconSelected":"/icons/search_black.svg"}],"currentSelectedLabel":"文章"}],["$","div",null,{"className":"article_pageBodyMain___x_AF","children":[["$","$Ld",null,{}],["$","div",null,{"className":"article_articleContainer__uRwUh scrollContent","children":[["$","div",null,{"className":"article_articleBody__0coIY scrollContent","children":[["$","h1",null,{"style":{"marginBottom":"0.1rem","marginTop":"0.2rem"},"children":"11月7日Android学习笔记"}],["$","div",null,{"children":[["$","div",null,{"className":"tags_tags__qM_Ja","children":[["$","p",null,{"className":"tags_label__Rg6b2","children":"分类"}],[["$","$Le","0",{"href":"/articles/新知笔记/1","children":["$","p","0",{"className":"tags_tag__HZYxk tags_tagLink__gnw9V","children":"新知笔记"}]}],["$","$Le","1",{"href":"/articles/Android学习/1","children":["$","p","1",{"className":"tags_tag__HZYxk tags_tagLink__gnw9V","children":"Android学习"}]}]],false]}],["$","div",null,{"className":"tags_tags__qM_Ja","children":[["$","p",null,{"className":"tags_label__Rg6b2","children":"标签"}],"$undefined",[["$","p","0",{"className":"tags_tag__HZYxk ","children":"Android"}],["$","p","1",{"className":"tags_tag__HZYxk ","children":"Activity"}],["$","p","2",{"className":"tags_tag__HZYxk ","children":"layout"}],["$","p","3",{"className":"tags_tag__HZYxk ","children":"dialog"}]]]}],["$","$Lf",null,{"path":"11%E6%9C%887%E6%97%A5Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0","serverURL":"https://remark.timeshike.com/"}]]}],["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$10"}}],["$","$L11",null,{}],["$","$L12",null,{"path":"11%E6%9C%887%E6%97%A5Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0","serverURL":"https://remark.timeshike.com/","lang":"zh-CN"}],["$","div",null,{"className":"bottomBar_bottomBar__uHU1W","children":["$","div",null,{"className":"bottomBar_text__iz3cM","children":["Powerd by",["$","a",null,{"href":"https://github.com/hixyl/YlBlog","target":"_blank","children":" YlBlog(玉龙博客)"}]]}]}]]}],["$","$L13",null,{}]]}]]}],["$","$L14",null,{}]]}]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"11月7日Android学习笔记 - 流年石刻"}],["$","meta","2",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","3",{"name":"next-size-adjust"}]]
