3:I[9275,[],""]
5:I[1343,[],""]
6:I[4080,["185","static/chunks/app/layout-950680b5068c0831.js"],""]
7:I[4266,["185","static/chunks/app/layout-950680b5068c0831.js"],"default"]
4:["id","9%E6%9C%8819%E6%97%A5Spring%E7%AC%94%E8%AE%B0","d"]
0:["bbFeRMIduFcZud7BNs8NQ",[[["",{"children":["article",{"children":[["id","9%E6%9C%8819%E6%97%A5Spring%E7%AC%94%E8%AE%B0","d"],{"children":["__PAGE__?{\"id\":\"9月19日Spring笔记\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["article",{"children":[["id","9%E6%9C%8819%E6%97%A5Spring%E7%AC%94%E8%AE%B0","d"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","article","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/99f6a99e5e57ec87.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/d0df4e9d9cd28850.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/c033a265c4b6e7f8.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","3",{"rel":"stylesheet","href":"/_next/static/css/81abeb1d965206f7.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","4",{"rel":"stylesheet","href":"/_next/static/css/a46a6036119d7d12.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","5",{"rel":"stylesheet","href":"/_next/static/css/51cbc18a5b192d8f.css","precedence":"next","crossOrigin":"$undefined"}]]}],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","article","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"zh","children":[["$","link",null,{"rel":"icon","href":"/favicon.png?<generated>","type":"image/<generated>","sizes":"<generated>"}],["$","$L6",null,{"src":"https://www.googletagmanager.com/gtag/js?id=G-N3DJ3JTVT2"}],["$","$L6",null,{"id":"google-analytics","children":"\n          window.dataLayer = window.dataLayer || [];\n          function gtag(){dataLayer.push(arguments);}\n          gtag('js', new Date());\n        \n          gtag('config', 'G-N3DJ3JTVT2');\n        "}],["$","body",null,{"className":"__className_36bd41","children":[["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}],["$","$L7",null,{}]]}]]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/aae87c042353adfd.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:I[2612,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
a:I[4306,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
b:I[231,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],""]
c:I[4254,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
e:I[3869,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
f:I[5339,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"Waline"]
10:I[8360,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
11:I[4226,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
d:T1e95,
    <p class="time">发布时间：<time datetime="19 September, 2022">2022-09-19 17:28:40</time></p>
    <p class="words">本文字数：789 字       阅读完需：约 3 分钟</p>
    <h2>SPEL 表达式</h2>
<p>spring 表达式语言（简称SpEL）：是一个支持运行时查询和操作对象图的强大的表达式语言；<br>
语法类似于 EL：SpEL 使用 #{…} 作为定界符，所有在大框号中的字符都将被认为是 SpEL；<br>
SpEL 为 bean 的属性进行动态赋值提供了便利；</p>
<p>通过 SpEL 可以实现：</p>
<ol>
<li>通过 bean 的 id 对 bean 进行引用；</li>
<li>调用方法以及引用对象中的属性；</li>
<li>计算表达式的值；</li>
<li>正则表达式的匹配；</li>
</ol>
<h3>字面量的表示</h3>
<p>整数：<code>&#x3C;property name="count" value="#{5}"/></code><br>
小数：<code>&#x3C;property name="frequency" value="#{89.7}"/></code><br>
科学计数法：<code>&#x3C;property name="capacity" value="#{1e4}"/></code><br>
String可以使用单引号或者双引号作为字符串的定界符号：<code>&#x3C;property name=“name” value="#{'Chuck'}"/></code> 或 <code>&#x3C;property name='name' value='#{"Chuck"}'/></code><br>
Boolean：<code>&#x3C;property name="enabled" value="#{false}"/></code></p>
<p><img src="9_19_01.PNG" alt="alt">
<img src="9_19_02.PNG" alt="alt">
<img src="9_19_03.PNG" alt="alt">
<img src="9_19_04.PNG" alt="alt"></p>
<h2>SpringMVC</h2>
<h3>SpringMVC 原理</h3>
<p><img src="9_19_05.PNG" alt="alt"></p>
<p>HandlerMapping: 映射处理器<br>
HandlerAdapter: 映射适配器<br>
HttpMessageConveter: 消息转换器</p>
<p>原理解析：<br>
1、用户向服务器发送请求，请求被Spring前端控制ServeltDispatcherServlet捕获；<br>
2、DispatcherServlet对请求URL进行解析，得到请求资源标识符（URI）。然后根据该URI，调用HandlerMapping获得该Handler配置的所有相关的对象（包括Handler对象以及Handler对象对应的拦截器），最后以HandlerExecutionChain对象的形式返回；<br>
3、DispatcherServlet根据获得的Handler，选择一个合适的HandlerAdapter。执行相应的Controller（附注：如果成功获得HandlerAdapter后，此时将开始执行拦截器的preHandler(...)方法）；<br>
4、提取Request中的模型数据，填充Handler入参，开始执行Handler（Controller)。在填充Handler的入参过程中，根据配置，Spring将帮你做一些额外的工作：<br>
HttpMessageConveter：将请求消息（如Json、xml等数据）转换成一个对象，将对象转换为指定的响应信息；<br>
数据转换：对请求消息进行数据转换。如String转换成Integer、Double等；<br>
数据根式化：对请求消息进行数据格式化。如将字符串转换成格式化数字或格式化日期等；<br>
数据验证：验证数据的有效性（长度、格式等），验证结果存储到BindingResult或Error中；<br>
5、Handler执行完成后，向DispatcherServlet返回一个ModelAndView对象；<br>
6、根据返回的ModelAndView，选择一个适合的ViewResolver（必须是已经注册到Spring容器中的ViewResolver)返回给DispatcherServlet；<br>
7、ViewResolver结合Model和View，来渲染视图；<br>
8、将渲染结果返回给客户端；</p>
<h3>配置示例</h3>
<p>web.xml</p>
<pre><code class="language-xml">&#x3C;?xml version="1.0" encoding="UTF-8"?>
&#x3C;web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    &#x3C;context-param>
        &#x3C;param-name>contextConfigLocation&#x3C;/param-name>
        &#x3C;param-value>classpath:spring-config.xml&#x3C;/param-value>
    &#x3C;/context-param>
    &#x3C;servlet>
        &#x3C;servlet-name>DispatcherServlet&#x3C;/servlet-name>
        &#x3C;servlet-class>org.springframework.web.servlet.DispatcherServlet&#x3C;/servlet-class>
        &#x3C;init-param>
            &#x3C;param-name>contextConfigLocation&#x3C;/param-name>
            &#x3C;param-value>classpath:spring-mvc.xml&#x3C;/param-value>
        &#x3C;/init-param>
    &#x3C;/servlet>
    &#x3C;servlet-mapping>
        &#x3C;servlet-name>DispatcherServlet&#x3C;/servlet-name>
        &#x3C;url-pattern>*.action&#x3C;/url-pattern>
    &#x3C;/servlet-mapping>
    &#x3C;listener>
        &#x3C;listener-class>org.springframework.web.context.ContextLoaderListener&#x3C;/listener-class>
    &#x3C;/listener>
&#x3C;/web-app>
</code></pre>
<p>spring-mvc.xml</p>
<pre><code class="language-xml">&#x3C;?xml version="1.0" encoding="UTF-8"?>
&#x3C;beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
&#x3C;!--    包扫描-->
    &#x3C;context:component-scan base-package="com.zr">&#x3C;/context:component-scan>
    &#x3C;!--映射处理器-->
&#x3C;!--    &#x3C;bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">&#x3C;/bean>-->
    &#x3C;!--映射适配器-->
&#x3C;!--    &#x3C;bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">&#x3C;/bean>-->

&#x3C;!--    开启RequestMapping映射处理器和适配器-->
    &#x3C;mvc:annotation-driven>&#x3C;/mvc:annotation-driven>
    &#x3C;bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        &#x3C;property name="prefix" value="/WEB-INF/views/">&#x3C;/property>
        &#x3C;property name="suffix" value=".jsp">&#x3C;/property>
    &#x3C;/bean>
&#x3C;/beans>
</code></pre>
<p>UserController.java</p>
<pre><code class="language-java">package com.zr.controller;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

@Controller

public class UserController {
    @RequestMapping("user/login.action")
    public ModelAndView login(String userId, String password){
        System.out.println("userId:"+userId+", password"+password);
        ModelAndView mav = new ModelAndView();
        mav.setViewName("main");
        return mav;
    }

}
</code></pre>
<p>index.jsp</p>
<pre><code class="language-html">&#x3C;%@ page contentType="text/html;charset=UTF-8" language="java" %>
&#x3C;html>
&#x3C;body>
&#x3C;h2>Hello World!&#x3C;/h2>
&#x3C;form action="user/login.action" method="post">
    账号: &#x3C;input type="text" name="userId">&#x3C;br>
    密码: &#x3C;input type="password" name="password">&#x3C;br>
    &#x3C;input type="submit">
&#x3C;/form>
&#x3C;/body>
&#x3C;/html>
</code></pre>
<p>WEB-INF/views/main.jsp</p>
<pre><code class="language-html">&#x3C;%--
  Created by IntelliJ IDEA.
  User: smile
  Date: 2022/9/19
  Time: 16:14
  To change this template use File | Settings | File Templates.
--%>
&#x3C;%@ page contentType="text/html;charset=UTF-8" language="java" %>
&#x3C;html>
&#x3C;head>
    &#x3C;title>main&#x3C;/title>
&#x3C;/head>
&#x3C;body>
Main
&#x3C;/body>
&#x3C;/html>
</code></pre>
<p>效果：在主页输入账号密码后，自动解析账号密码，调用controller层的方法，控制台输出账号密码，同时ModelAndView选择ViewResolver渲染，用户最后会跳转至main页面</p>

  2:["$","div",null,{"className":"article_pageBody__Bryg4","children":[["$","$L9",null,{"menuItemList":[{"id":0,"label":"首页","href":"/","icon":"/icons/home_gray.svg","iconSelected":"/icons/home_black.svg"},{"id":1,"label":"文章","href":"/articles/all/1","icon":"/icons/article_gray.svg","iconSelected":"/icons/article_black.svg"},{"id":3,"label":"关于","href":"/about","icon":"/icons/about_gray.svg","iconSelected":"/icons/about_black.svg"},{"id":4,"label":"搜索","href":"/search","icon":"/icons/search_gray.svg","iconSelected":"/icons/search_black.svg"}],"currentSelectedLabel":"文章"}],["$","div",null,{"className":"article_pageBodyMain___x_AF","children":[["$","$La",null,{}],["$","div",null,{"className":"article_articleContainer__uRwUh scrollContent","children":[["$","div",null,{"className":"article_articleBody__0coIY scrollContent","children":[["$","h1",null,{"style":{"marginBottom":"0.1rem","marginTop":"0.2rem"},"children":"9月19日Spring笔记"}],["$","div",null,{"children":[["$","div",null,{"className":"tags_tags__qM_Ja","children":[["$","p",null,{"className":"tags_label__Rg6b2","children":"分类"}],[["$","$Lb","0",{"href":"/articles/新知笔记/1","children":["$","p","0",{"className":"tags_tag__HZYxk tags_tagLink__gnw9V","children":"新知笔记"}]}],["$","$Lb","1",{"href":"/articles/后端学习/1","children":["$","p","1",{"className":"tags_tag__HZYxk tags_tagLink__gnw9V","children":"后端学习"}]}]],false]}],["$","div",null,{"className":"tags_tags__qM_Ja","children":[["$","p",null,{"className":"tags_label__Rg6b2","children":"标签"}],"$undefined",[["$","p","0",{"className":"tags_tag__HZYxk ","children":"java"}],["$","p","1",{"className":"tags_tag__HZYxk ","children":"后端"}],["$","p","2",{"className":"tags_tag__HZYxk ","children":"spring"}],["$","p","3",{"className":"tags_tag__HZYxk ","children":"springMVC"}]]]}],["$","$Lc",null,{"path":"9%E6%9C%8819%E6%97%A5Spring%E7%AC%94%E8%AE%B0","serverURL":"https://remark.timeshike.com/"}]]}],["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$d"}}],["$","$Le",null,{}],["$","$Lf",null,{"path":"9%E6%9C%8819%E6%97%A5Spring%E7%AC%94%E8%AE%B0","serverURL":"https://remark.timeshike.com/","lang":"zh-CN"}],["$","div",null,{"className":"bottomBar_bottomBar__uHU1W","children":["$","div",null,{"className":"bottomBar_text__iz3cM","children":["Powerd by",["$","a",null,{"href":"https://github.com/hixyl/YlBlog","target":"_blank","children":" YlBlog(玉龙博客)"}]]}]}]]}],["$","$L10",null,{}]]}]]}],["$","$L11",null,{}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"9月19日Spring笔记 - 流年石刻"}],["$","meta","3",{"name":"next-size-adjust"}]]
1:null
