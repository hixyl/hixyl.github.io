3:I[9275,[],""]
5:I[1343,[],""]
6:I[4080,["185","static/chunks/app/layout-950680b5068c0831.js"],""]
7:I[4266,["185","static/chunks/app/layout-950680b5068c0831.js"],"default"]
4:["id","9%E6%9C%8817%E6%97%A5Spring%E7%AC%94%E8%AE%B0","d"]
0:["bbFeRMIduFcZud7BNs8NQ",[[["",{"children":["article",{"children":[["id","9%E6%9C%8817%E6%97%A5Spring%E7%AC%94%E8%AE%B0","d"],{"children":["__PAGE__?{\"id\":\"9月17日Spring笔记\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["article",{"children":[["id","9%E6%9C%8817%E6%97%A5Spring%E7%AC%94%E8%AE%B0","d"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","article","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/99f6a99e5e57ec87.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/d0df4e9d9cd28850.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/c033a265c4b6e7f8.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","3",{"rel":"stylesheet","href":"/_next/static/css/81abeb1d965206f7.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","4",{"rel":"stylesheet","href":"/_next/static/css/a46a6036119d7d12.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","5",{"rel":"stylesheet","href":"/_next/static/css/51cbc18a5b192d8f.css","precedence":"next","crossOrigin":"$undefined"}]]}],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","article","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"zh","children":[["$","link",null,{"rel":"icon","href":"/favicon.png?<generated>","type":"image/<generated>","sizes":"<generated>"}],["$","$L6",null,{"src":"https://www.googletagmanager.com/gtag/js?id=G-N3DJ3JTVT2"}],["$","$L6",null,{"id":"google-analytics","children":"\n          window.dataLayer = window.dataLayer || [];\n          function gtag(){dataLayer.push(arguments);}\n          gtag('js', new Date());\n        \n          gtag('config', 'G-N3DJ3JTVT2');\n        "}],["$","body",null,{"className":"__className_36bd41","children":[["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}],["$","$L7",null,{}]]}]]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/aae87c042353adfd.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:I[2612,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
a:I[4306,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
b:I[231,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],""]
c:I[4254,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
e:I[3869,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
f:I[5339,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"Waline"]
10:I[8360,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
11:I[4226,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
d:T3345,
    <p class="time">发布时间：<time datetime="17 September, 2022">2022-09-17 17:18:07</time></p>
    <p class="words">本文字数：855 字       阅读完需：约 6 分钟</p>
    <h2>spring-jdbc</h2>
<h3>示例</h3>
<p>pom.xml</p>
<pre><code class="language-xml">&#x3C;?xml version="1.0" encoding="UTF-8"?>
&#x3C;project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    &#x3C;modelVersion>4.0.0&#x3C;/modelVersion>

    &#x3C;groupId>com.zr&#x3C;/groupId>
    &#x3C;artifactId>SpringJdbc&#x3C;/artifactId>
    &#x3C;version>1.0-SNAPSHOT&#x3C;/version>

    &#x3C;properties>
        &#x3C;maven.compiler.source>8&#x3C;/maven.compiler.source>
        &#x3C;maven.compiler.target>8&#x3C;/maven.compiler.target>
    &#x3C;/properties>

    &#x3C;dependencies>
        &#x3C;dependency>
            &#x3C;groupId>junit&#x3C;/groupId>
            &#x3C;artifactId>junit&#x3C;/artifactId>
            &#x3C;version>4.13.2&#x3C;/version>
        &#x3C;/dependency>
        &#x3C;dependency>
            &#x3C;groupId>org.springframework&#x3C;/groupId>
            &#x3C;artifactId>spring-core&#x3C;/artifactId>
            &#x3C;version>5.3.22&#x3C;/version>
        &#x3C;/dependency>
        &#x3C;dependency>
            &#x3C;groupId>org.springframework&#x3C;/groupId>
            &#x3C;artifactId>spring-beans&#x3C;/artifactId>
            &#x3C;version>5.3.22&#x3C;/version>
        &#x3C;/dependency>
        &#x3C;dependency>
            &#x3C;groupId>org.springframework&#x3C;/groupId>
            &#x3C;artifactId>spring-context&#x3C;/artifactId>
            &#x3C;version>5.3.22&#x3C;/version>
        &#x3C;/dependency>
        &#x3C;dependency>
            &#x3C;groupId>org.springframework&#x3C;/groupId>
            &#x3C;artifactId>spring-aop&#x3C;/artifactId>
            &#x3C;version>5.3.22&#x3C;/version>
        &#x3C;/dependency>
        &#x3C;dependency>
            &#x3C;groupId>org.springframework&#x3C;/groupId>
            &#x3C;artifactId>spring-jdbc&#x3C;/artifactId>
            &#x3C;version>5.3.22&#x3C;/version>
        &#x3C;/dependency>
        &#x3C;dependency>
            &#x3C;groupId>com.alibaba&#x3C;/groupId>
            &#x3C;artifactId>druid&#x3C;/artifactId>
            &#x3C;version>1.1.17&#x3C;/version>
        &#x3C;/dependency>
        &#x3C;dependency>
            &#x3C;groupId>mysql&#x3C;/groupId>
            &#x3C;artifactId>mysql-connector-java&#x3C;/artifactId>
            &#x3C;version>5.1.27&#x3C;/version>
        &#x3C;/dependency>
        &#x3C;dependency>
            &#x3C;groupId>org.aspectj&#x3C;/groupId>
            &#x3C;artifactId>aspectjweaver&#x3C;/artifactId>
            &#x3C;version>1.9.9.1&#x3C;/version>
        &#x3C;/dependency>
    &#x3C;/dependencies>

&#x3C;/project>
</code></pre>
<p>AreaDaoImpl.java</p>
<pre><code class="language-java">package com.zr.dao.impl;

import com.zr.dao.AreaDao;
import com.zr.vo.Area;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.ResultSetExtractor;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Repository;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

@Repository
public class AreaDaoImpl implements AreaDao {

    @Autowired
    private JdbcTemplate jdbcTemplate;

    @Override
    public Area query(Integer areaId) {
        return jdbcTemplate.queryForObject("select * from t_area where area_id = ?", new RowMapper&#x3C;Area>() {
            @Override
            public Area mapRow(ResultSet rs, int rowNum) throws SQLException {
                    Area area= new Area();
                    area.setAreaId(rs.getInt("area_id"));
                    area.setAreaName(rs.getString("area_name"));
                    area.setParentId(rs.getInt("parent_id"));
                    return area;
            }
        }, areaId);
    }

    @Override
    public List&#x3C;Area> queryList(Integer parentId) {
        return jdbcTemplate.query("select * from t_area where parent_id = ?", new RowMapper&#x3C;Area>(){

            @Override
            public Area mapRow(ResultSet rs, int rowNum) throws SQLException {
                Area area= new Area();
                area.setAreaId(rs.getInt("area_id"));
                area.setAreaName(rs.getString("area_name"));
                area.setParentId(rs.getInt("parent_id"));
                return area;
            }
        }, parentId);
    }
}
</code></pre>
<h2>jdbc使用配置类配置</h2>
<p>示例</p>
<p>SpringConfig.java</p>
<pre><code class="language-java">package com.zr.config;

import com.alibaba.druid.pool.DruidDataSource;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.jdbc.core.JdbcTemplate;

import javax.sql.DataSource;

@Configuration
@ComponentScan("com.zr")
public class SpringConfig {
    @Bean
    public JdbcTemplate jdbcTemplate(){
        // new 一个类对象
        JdbcTemplate jdbcTemplate = new JdbcTemplate();
        jdbcTemplate.setDataSource(dataSource());
        return jdbcTemplate;
    }
    @Bean
    public DataSource dataSource(){
        DruidDataSource dataSource = new DruidDataSource();
        // 使用set方法给new的对象赋值，相当于配置文件中的propeties标签
        dataSource.setDriverClassName("com.mysql.jdbc.Driver");
        dataSource.setUrl("jdbc:mysql://127.0.0.1:3306/test");
        dataSource.setUsername("root");
        dataSource.setPassword("mysql");
        return dataSource;
    }
}
</code></pre>
<p>TestConfig.java</p>
<pre><code class="language-java">package com.zr;

import com.zr.action.AreaAction;
import com.zr.config.SpringConfig;
import com.zr.vo.Area;
import org.junit.Test;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import java.util.List;

public class TestConfig {
    @Test
    public void test(){
        AnnotationConfigApplicationContext ac = new AnnotationConfigApplicationContext(SpringConfig.class);
        AreaAction areaAction = ac.getBean(AreaAction.class);
        List&#x3C;Area> areaList = areaAction.query(1);
        System.out.println(areaList);
    }
}
</code></pre>
<h2>事务</h2>
<h3>事务的传播特性</h3>
<p>事务的特性：ACID(原子性、一致性、隔离性和持久性)</p>
<p>原子性(Atomicity): 即事务是不可分割的最小工作单元，事务内的操作要么全做，要么全不做<br>
一致性(Consistency): 事务执行前后数据库中的数据都处于正确状态，数据完整性没有被破坏
隔离性(Isolation): 并发事务之间互相影响的程度，比如一个事务会不会读取到另一个未提交的事务修改的数据。<br>
持久性(Durability):  事务提交后，对系统的影响是永久的。</p>
<p><img src="9_17_01.PNG" alt="alt">
<img src="9_17_02.PNG" alt="alt"></p>
<h3>数据库锁</h3>
<p>悲观锁：查询数据后锁死该数据，其他用户无法更改<br>
乐观锁：乐观锁在操作数据时非常乐观，认为别人不会同时修改数据。. 因此乐观锁不会上锁，只是在执行更新的时候判断一下在此期间别人是否修改了数据：如果别人修改了数据则放弃操作，否则执行操作。</p>
<h3>spring事务管理示例</h3>
<h4>声明式事务</h4>
<p>spring-config.xml</p>
<pre><code class="language-xml">&#x3C;?xml version="1.0" encoding="UTF-8"?>
&#x3C;beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
    &#x3C;context:component-scan base-package="com.zr">&#x3C;/context:component-scan>
    &#x3C;bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        &#x3C;property name="dataSource" ref="dataSource">&#x3C;/property>
    &#x3C;/bean>
    &#x3C;bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        &#x3C;property name="driverClassName" value="com.mysql.jdbc.Driver">&#x3C;/property>
        &#x3C;property name="url" value="jdbc:mysql://127.0.0.1:3306/test">&#x3C;/property>
        &#x3C;property name="username" value="root">&#x3C;/property>
        &#x3C;property name="password" value="mysql">&#x3C;/property>
    &#x3C;/bean>
&#x3C;!--    配置事务管理器-->
    &#x3C;bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        &#x3C;property name="dataSource" ref="dataSource">&#x3C;/property>
    &#x3C;/bean>
    &#x3C;!-- 以下配置xml声明式事务 -->
    &#x3C;tx:advice id="transactionInterceptor" transaction-manager="transactionManager">
        &#x3C;tx:attributes>
            &#x3C;tx:method name="query*" isolation="DEFAULT" propagation="REQUIRED" read-only="true"/>
            &#x3C;tx:method name="add*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
            &#x3C;tx:method name="edit*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
            &#x3C;tx:method name="remove*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
        &#x3C;/tx:attributes>
    &#x3C;/tx:advice>
    &#x3C;aop:config>
        &#x3C;aop:pointcut id="pointcut" expression="execution(* com.zr.service.*.*(..))"/>
        &#x3C;aop:advisor advice-ref="transactionInterceptor" pointcut-ref="pointcut">&#x3C;/aop:advisor>
    &#x3C;/aop:config>

&#x3C;/beans>
</code></pre>
<p>如果已开启查询事务，进行修改，会报错，因为查询的<code>read-only="true"</code><br>
如果添加失败，会自动回滚(事务的一致性)</p>
<h4>编程式事务</h4>
<p>spring-config.xml</p>
<pre><code class="language-xml">&#x3C;?xml version="1.0" encoding="UTF-8"?>
&#x3C;beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
    &#x3C;context:component-scan base-package="com.zr">&#x3C;/context:component-scan>
    &#x3C;bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        &#x3C;property name="dataSource" ref="dataSource">&#x3C;/property>
    &#x3C;/bean>
    &#x3C;bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        &#x3C;property name="driverClassName" value="com.mysql.jdbc.Driver">&#x3C;/property>
        &#x3C;property name="url" value="jdbc:mysql://127.0.0.1:3306/test">&#x3C;/property>
        &#x3C;property name="username" value="root">&#x3C;/property>
        &#x3C;property name="password" value="mysql">&#x3C;/property>
    &#x3C;/bean>
&#x3C;!--    配置事务管理器-->
    &#x3C;bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        &#x3C;property name="dataSource" ref="dataSource">&#x3C;/property>
    &#x3C;/bean>
    &#x3C;tx:annotation-driven transaction-manager="transactionManager">&#x3C;/tx:annotation-driven>


&#x3C;/beans>
</code></pre>
<p>AreaServiceImpl.java</p>
<pre><code class="language-java">package com.zr.service.impl;

import com.zr.dao.AreaDao;
import com.zr.service.AreaService;
import com.zr.vo.Area;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;

@Service
public class AreaServiceImpl implements AreaService {
    @Autowired
    private AreaDao areaDao;

    @Override
    public List&#x3C;Area> query(Integer areaId) {
        return areaDao.query(areaId);
    }
    // 声明事务
    @Transactional
    @Override
    public int add() {
        Area area = new Area();
        area.setAreaId(29);
        area.setAreaName("绿园区");
        area.setParentId(4);
        areaDao.add(area);
        return  areaDao.add(area);
    }
}
</code></pre>
<p>对一个表进行多次操作时可以加事务，只进行一次没必要加事务</p>

  2:["$","div",null,{"className":"article_pageBody__Bryg4","children":[["$","$L9",null,{"menuItemList":[{"id":0,"label":"首页","href":"/","icon":"/icons/home_gray.svg","iconSelected":"/icons/home_black.svg"},{"id":1,"label":"文章","href":"/articles/all/1","icon":"/icons/article_gray.svg","iconSelected":"/icons/article_black.svg"},{"id":3,"label":"关于","href":"/about","icon":"/icons/about_gray.svg","iconSelected":"/icons/about_black.svg"},{"id":4,"label":"搜索","href":"/search","icon":"/icons/search_gray.svg","iconSelected":"/icons/search_black.svg"}],"currentSelectedLabel":"文章"}],["$","div",null,{"className":"article_pageBodyMain___x_AF","children":[["$","$La",null,{}],["$","div",null,{"className":"article_articleContainer__uRwUh scrollContent","children":[["$","div",null,{"className":"article_articleBody__0coIY scrollContent","children":[["$","h1",null,{"style":{"marginBottom":"0.1rem","marginTop":"0.2rem"},"children":"9月17日Spring笔记"}],["$","div",null,{"children":[["$","div",null,{"className":"tags_tags__qM_Ja","children":[["$","p",null,{"className":"tags_label__Rg6b2","children":"分类"}],[["$","$Lb","0",{"href":"/articles/新知笔记/1","children":["$","p","0",{"className":"tags_tag__HZYxk tags_tagLink__gnw9V","children":"新知笔记"}]}],["$","$Lb","1",{"href":"/articles/后端学习/1","children":["$","p","1",{"className":"tags_tag__HZYxk tags_tagLink__gnw9V","children":"后端学习"}]}]],false]}],["$","div",null,{"className":"tags_tags__qM_Ja","children":[["$","p",null,{"className":"tags_label__Rg6b2","children":"标签"}],"$undefined",[["$","p","0",{"className":"tags_tag__HZYxk ","children":"java"}],["$","p","1",{"className":"tags_tag__HZYxk ","children":"后端"}],["$","p","2",{"className":"tags_tag__HZYxk ","children":"spring"}],["$","p","3",{"className":"tags_tag__HZYxk ","children":"jdbc"}],["$","p","4",{"className":"tags_tag__HZYxk ","children":"事务管理"}]]]}],["$","$Lc",null,{"path":"9%E6%9C%8817%E6%97%A5Spring%E7%AC%94%E8%AE%B0","serverURL":"https://remark.timeshike.com/"}]]}],["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$d"}}],["$","$Le",null,{}],["$","$Lf",null,{"path":"9%E6%9C%8817%E6%97%A5Spring%E7%AC%94%E8%AE%B0","serverURL":"https://remark.timeshike.com/","lang":"zh-CN"}],["$","div",null,{"className":"bottomBar_bottomBar__uHU1W","children":["$","div",null,{"className":"bottomBar_text__iz3cM","children":["Powerd by",["$","a",null,{"href":"https://github.com/hixyl/YlBlog","target":"_blank","children":" YlBlog(玉龙博客)"}]]}]}]]}],["$","$L10",null,{}]]}]]}],["$","$L11",null,{}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"9月17日Spring笔记 - 流年石刻"}],["$","meta","3",{"name":"next-size-adjust"}]]
1:null
