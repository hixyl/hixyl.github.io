1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/4889457fae64fbaf.css",{"as":"style"}]
0:["1_3yZ7IsYvrU9J1hOFkJ4",[[["",{"children":["article",{"children":[["id","%E5%9F%BA%E4%BA%8EReact%E7%9A%84%E5%89%8D%E7%AB%AF%E6%97%A5%E5%8E%86%E7%BB%84%E4%BB%B6%E7%BC%96%E5%86%99%E6%95%99%E7%A8%8B","d"],{"children":["__PAGE__?{\"id\":\"基于React的前端日历组件编写教程\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/4889457fae64fbaf.css","precedence":"next"}]],"$L4"]]]]
5:HL["/_next/static/css/4ea5502f10194bf8.css",{"as":"style"}]
6:HL["/_next/static/css/99f6a99e5e57ec87.css",{"as":"style"}]
7:I{"id":3015,"chunks":["185:static/chunks/app/layout-310f4f1110904b4e.js"],"name":"","async":false}
8:I{"id":7767,"chunks":["272:static/chunks/webpack-ee7fb6f14fc08248.js","971:static/chunks/fd9d1056-2a48348db6e9e5e0.js","596:static/chunks/596-38dca328e8a8de9d.js"],"name":"default","async":false}
9:I{"id":7920,"chunks":["272:static/chunks/webpack-ee7fb6f14fc08248.js","971:static/chunks/fd9d1056-2a48348db6e9e5e0.js","596:static/chunks/596-38dca328e8a8de9d.js"],"name":"default","async":false}
b:I{"id":5345,"chunks":["185:static/chunks/app/layout-310f4f1110904b4e.js"],"name":"","async":false}
3:[["$","html",null,{"lang":"zh","children":[["$","link",null,{"rel":"icon","href":"/favicon.png?<generated>","type":"image/<generated>","sizes":"<generated>"}],["$","$L7",null,{"src":"https://www.googletagmanager.com/gtag/js?id=G-N3DJ3JTVT2"}],["$","$L7",null,{"id":"google-analytics","children":"\n          window.dataLayer = window.dataLayer || [];\n          function gtag(){dataLayer.push(arguments);}\n          gtag('js', new Date());\n        \n          gtag('config', 'G-N3DJ3JTVT2');\n        "}],["$","body",null,{"className":"__className_aaf875","children":[["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","article","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","article","children",["id","%E5%9F%BA%E4%BA%8EReact%E7%9A%84%E5%89%8D%E7%AB%AF%E6%97%A5%E5%8E%86%E7%BB%84%E4%BB%B6%E7%BC%96%E5%86%99%E6%95%99%E7%A8%8B","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$La",null],"segment":"__PAGE__?{\"id\":\"基于React的前端日历组件编写教程\"}"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/4ea5502f10194bf8.css","precedence":"next"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/99f6a99e5e57ec87.css","precedence":"next"}]]}],"segment":["id","%E5%9F%BA%E4%BA%8EReact%E7%9A%84%E5%89%8D%E7%AB%AF%E6%97%A5%E5%8E%86%E7%BB%84%E4%BB%B6%E7%BC%96%E5%86%99%E6%95%99%E7%A8%8B","d"]},"styles":[]}],"segment":"article"},"styles":[]}],["$","$Lb",null,{}]]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"基于React的前端日历组件编写教程 - 流年石刻"}],["$","meta","2",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","3",{"name":"next-size-adjust"}]]
c:I{"id":4733,"chunks":["577:static/chunks/221e729c-4a54b4fe5604a5c1.js","231:static/chunks/9316e0b3-dfc595e0ff39c618.js","165:static/chunks/165-9f67d2f80e9188a0.js","681:static/chunks/681-e2d1e0d67cbf2503.js","945:static/chunks/945-dd57d3732d1beca5.js","241:static/chunks/app/article/[id]/page-aea0b0747e3ad17f.js"],"name":"","async":false}
d:I{"id":6697,"chunks":["577:static/chunks/221e729c-4a54b4fe5604a5c1.js","231:static/chunks/9316e0b3-dfc595e0ff39c618.js","165:static/chunks/165-9f67d2f80e9188a0.js","681:static/chunks/681-e2d1e0d67cbf2503.js","945:static/chunks/945-dd57d3732d1beca5.js","241:static/chunks/app/article/[id]/page-aea0b0747e3ad17f.js"],"name":"","async":false}
e:I{"id":6685,"chunks":["577:static/chunks/221e729c-4a54b4fe5604a5c1.js","231:static/chunks/9316e0b3-dfc595e0ff39c618.js","165:static/chunks/165-9f67d2f80e9188a0.js","681:static/chunks/681-e2d1e0d67cbf2503.js","945:static/chunks/945-dd57d3732d1beca5.js","241:static/chunks/app/article/[id]/page-aea0b0747e3ad17f.js"],"name":"","async":false}
f:I{"id":9777,"chunks":["577:static/chunks/221e729c-4a54b4fe5604a5c1.js","231:static/chunks/9316e0b3-dfc595e0ff39c618.js","165:static/chunks/165-9f67d2f80e9188a0.js","681:static/chunks/681-e2d1e0d67cbf2503.js","945:static/chunks/945-dd57d3732d1beca5.js","241:static/chunks/app/article/[id]/page-aea0b0747e3ad17f.js"],"name":"","async":false}
11:I{"id":5529,"chunks":["577:static/chunks/221e729c-4a54b4fe5604a5c1.js","231:static/chunks/9316e0b3-dfc595e0ff39c618.js","165:static/chunks/165-9f67d2f80e9188a0.js","681:static/chunks/681-e2d1e0d67cbf2503.js","945:static/chunks/945-dd57d3732d1beca5.js","241:static/chunks/app/article/[id]/page-aea0b0747e3ad17f.js"],"name":"","async":false}
12:I{"id":1848,"chunks":["577:static/chunks/221e729c-4a54b4fe5604a5c1.js","231:static/chunks/9316e0b3-dfc595e0ff39c618.js","165:static/chunks/165-9f67d2f80e9188a0.js","681:static/chunks/681-e2d1e0d67cbf2503.js","945:static/chunks/945-dd57d3732d1beca5.js","241:static/chunks/app/article/[id]/page-aea0b0747e3ad17f.js"],"name":"Waline","async":false}
13:I{"id":2953,"chunks":["577:static/chunks/221e729c-4a54b4fe5604a5c1.js","231:static/chunks/9316e0b3-dfc595e0ff39c618.js","165:static/chunks/165-9f67d2f80e9188a0.js","681:static/chunks/681-e2d1e0d67cbf2503.js","945:static/chunks/945-dd57d3732d1beca5.js","241:static/chunks/app/article/[id]/page-aea0b0747e3ad17f.js"],"name":"","async":false}
14:I{"id":633,"chunks":["577:static/chunks/221e729c-4a54b4fe5604a5c1.js","231:static/chunks/9316e0b3-dfc595e0ff39c618.js","165:static/chunks/165-9f67d2f80e9188a0.js","681:static/chunks/681-e2d1e0d67cbf2503.js","945:static/chunks/945-dd57d3732d1beca5.js","241:static/chunks/app/article/[id]/page-aea0b0747e3ad17f.js"],"name":"","async":false}
10:T311f,
    <p class="time">发布时间：<time datetime="25 September, 2023">2023-09-25 15:57:00</time></p>
    <p class="words">本文字数：531 字       阅读完需：约 2 分钟</p>
    <html><head></head><body><h2>前言</h2>
<p>前端日历组件可以在很多组件库中找到，但是如果有一些更加自定义的需求，那么就需要我们从0开始写一个全新的日历组件，这样的话自定义更加方便一些。</p>
<h2>思路</h2>
<p>首先，我们的日历要借助js的date相关的方法。比如</p>
<ol>
<li>当前月份的第一天: <code>const firstDayOfMonth = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-built_in">year</span>, <span class="hljs-built_in">month</span>, <span class="hljs-number">1</span>);</code></li>
<li>当前月份的最后一天: <code>const lastDayOfMonth = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-built_in">year</span>, <span class="hljs-built_in">month</span> + <span class="hljs-number">1</span>, <span class="hljs-number">0</span>);</code></li>
<li>上个月份的最后一天: <code>const lastDayOfLastMonth = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-built_in">year</span>, <span class="hljs-built_in">month</span>, <span class="hljs-number">0</span>);</code></li>
<li>第一天是星期几: <code><span class="hljs-keyword">const</span> firstDayOfWeek = firstDayOfMonth.<span class="hljs-keyword">get</span><span class="hljs-built_in">Day</span>();</code></li>
</ol>
<p>如果日历中有事件，思路是遍历事件数组，将每一个事件item的date的年、月、日与日历的每一天的年月日进行比对，比对后插入日历数组中。</p>
<p>如果是React的话，可以利用<code><span class="hljs-attribute">useEffect</span></code>监听数组的变化，当获取事件数组时或者手动切换月份时，更新日历即可。</p>
<h2>代码展示</h2>
<h3>日历的html代码</h3>
<pre><code class="language-html"><span class="language-xml">   <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=</span></span><span class="hljs-template-variable">{css.calendar}</span><span class="language-xml"><span class="hljs-tag">&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=</span></span><span class="hljs-template-variable">{css.calendarDays}</span><span class="language-xml"><span class="hljs-tag">&gt;</span>
        </span><span class="hljs-template-variable">{datePicker}</span><span class="language-xml">
        </span><span class="hljs-template-variable">{dateData.map((dayUnit, index) =&gt; (
          &lt;div key={index}</span><span class="language-xml"> className=</span><span class="hljs-template-variable">{css.calendarDay}</span><span class="language-xml">&gt;
            <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
              <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=</span></span><span class="hljs-template-variable">{css.calendarNumber}</span><span class="language-xml"><span class="hljs-tag">&gt;</span>
                </span><span class="hljs-template-variable">{dayUnit?.day === 1 &amp;&amp; `${month + 1}</span><span class="language-xml">月$</span><span class="hljs-template-variable">{dayUnit.day}</span><span class="language-xml">日`}
                </span><span class="hljs-template-variable">{dayUnit?.day !== 1 &amp;&amp; dayUnit?.day}</span><span class="language-xml">
              <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
              <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=</span></span><span class="hljs-template-variable">{css.calendarEvent}</span><span class="language-xml"><span class="hljs-tag">&gt;</span>
                </span><span class="hljs-template-variable">{dayUnit?.event.map((item) =&gt; {
                  return (
                    &lt;CalendarEventTag key={item.eventId}</span><span class="language-xml"> event=</span><span class="hljs-template-variable">{item}</span><span class="language-xml"> onDeleteClick=</span><span class="hljs-template-variable">{() =&gt; {}</span><span class="language-xml">} /&gt;
                  );
                })}
              <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
          <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
        ))}
      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
</span></code></pre>
<h3>日历的计算</h3>
<pre><code class="language-typescript"> const [dateData, setDateData] = useState&lt;(dateUnit | <span class="hljs-literal">null</span>)[]&gt;([]);
  <span class="hljs-comment">// 当前月份的第一天</span>
  const firstDayOfMonth = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-built_in">year</span>, <span class="hljs-built_in">month</span>, <span class="hljs-number">1</span>);
  <span class="hljs-comment">// 当前月份的最后一天</span>
  const lastDayOfMonth = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-built_in">year</span>, <span class="hljs-built_in">month</span> + <span class="hljs-number">1</span>, <span class="hljs-number">0</span>);
  <span class="hljs-comment">// 上个月份的最后一天</span>
  const lastDayOfLastMonth = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-built_in">year</span>, <span class="hljs-built_in">month</span>, <span class="hljs-number">0</span>);
  <span class="hljs-comment">// 第一天是星期几</span>
  const firstDayOfWeek = firstDayOfMonth.getDay();
  const [haveUpdatedEvent, setHaveUpdatedEvent] = useState(<span class="hljs-literal">false</span>);
   useEffect(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {
    <span class="hljs-built_in">console</span>.<span class="hljs-built_in">log</span>(<span class="hljs-string">'dateData'</span>, dateData);
    <span class="hljs-built_in">console</span>.<span class="hljs-built_in">log</span>(<span class="hljs-string">'month'</span>, <span class="hljs-built_in">month</span>);
    setHaveUpdatedEvent(<span class="hljs-literal">false</span>);
    <span class="hljs-comment">// 生成日历中的日期数组，使用 null 表示下一个月的日期</span>
    const daysInMonth: (dateUnit | <span class="hljs-literal">null</span>)[] = [];
    const totalDays = lastDayOfMonth.getDate();
    <span class="hljs-keyword">for</span> (let i = firstDayOfWeek; i &gt; <span class="hljs-number">0</span>; i--) {
      const <span class="hljs-built_in">day</span> = lastDayOfLastMonth.getDate() - i + <span class="hljs-number">1</span>;
      daysInMonth.<span class="hljs-built_in">push</span>({
        <span class="hljs-attr">date</span>: <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(lastDayOfLastMonth.getFullYear(), lastDayOfLastMonth.getMonth(), <span class="hljs-built_in">day</span>),
        <span class="hljs-attr">day</span>: <span class="hljs-built_in">day</span>,
        <span class="hljs-attr">event</span>: [],
      });
    }
    <span class="hljs-keyword">for</span> (let i = <span class="hljs-number">1</span>; i &lt;= totalDays; i++) {
      daysInMonth.<span class="hljs-built_in">push</span>({ <span class="hljs-attr">date</span>: <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-built_in">year</span>, <span class="hljs-built_in">month</span>, i), <span class="hljs-attr">day</span>: i, <span class="hljs-attr">event</span>: [] });
    }

    <span class="hljs-keyword">if</span> (daysInMonth.<span class="hljs-built_in">length</span> % <span class="hljs-number">7</span> !== <span class="hljs-number">0</span>) {
      const addNullNums = <span class="hljs-number">7</span> - (daysInMonth.<span class="hljs-built_in">length</span> % <span class="hljs-number">7</span>);
      <span class="hljs-keyword">for</span> (let i = <span class="hljs-number">0</span>; i &lt; addNullNums; i++) {
        daysInMonth.<span class="hljs-built_in">push</span>(<span class="hljs-literal">null</span>);
      }
    }
    setDateData(daysInMonth);
    <span class="hljs-comment">// eslint-disable-next-line react-hooks/exhaustive-deps</span>
  }, [<span class="hljs-built_in">year</span>, <span class="hljs-built_in">month</span>]);

  <span class="hljs-comment">// 日历的头部数组</span>
  const datePicker = <span class="hljs-built_in">Array</span>.from({ <span class="hljs-attr">length</span>: <span class="hljs-number">7</span> }, (_, index) =&gt; {
    const <span class="hljs-built_in">day</span> = index;
    <span class="hljs-keyword">return</span> (
      &lt;div className={css.datePickerDay} key={<span class="hljs-string">'head'</span> + index}&gt;
        周
        {<span class="hljs-built_in">day</span> === <span class="hljs-number">0</span>
          ? <span class="hljs-string">'日'</span>
          : <span class="hljs-built_in">day</span> === <span class="hljs-number">1</span>
          ? <span class="hljs-string">'一'</span>
          : <span class="hljs-built_in">day</span> === <span class="hljs-number">2</span>
          ? <span class="hljs-string">'二'</span>
          : <span class="hljs-built_in">day</span> === <span class="hljs-number">3</span>
          ? <span class="hljs-string">'三'</span>
          : <span class="hljs-built_in">day</span> === <span class="hljs-number">4</span>
          ? <span class="hljs-string">'四'</span>
          : <span class="hljs-built_in">day</span> === <span class="hljs-number">5</span>
          ? <span class="hljs-string">'五'</span>
          : <span class="hljs-string">'六'</span>}
      &lt;/div&gt;
    );
  });
</code></pre>
<h3>更新事件</h3>
<pre><code class="language-typescript"> useEffect(() =&gt; {
    if (<span class="hljs-name">calendarEventData</span>.length === <span class="hljs-number">0</span> || haveUpdatedEvent) {
      return<span class="hljs-comment">;</span>
    }
    console.log('calendarEventData', calendarEventData)<span class="hljs-comment">;</span>
    const newDateData: (<span class="hljs-name">dateUnit</span> | null)[] = []<span class="hljs-comment">;</span>
    dateData.forEach((<span class="hljs-name">unit</span>) =&gt; {
      newDateData.push(<span class="hljs-name">unit</span>)<span class="hljs-comment">;</span>
    })<span class="hljs-comment">;</span>
    calendarEventData.forEach((<span class="hljs-name">item</span>) =&gt; {
      if (<span class="hljs-name">item</span>.date.getFullYear() === year <span class="hljs-symbol">&amp;&amp;</span> item.date.getMonth() === month) {
        // 日历事件日期在当前月
        newDateData[firstDayOfWeek + item.date.getDate() - <span class="hljs-number">1</span>]?.event.push(<span class="hljs-name">item</span>)<span class="hljs-comment">;</span>
      } else if (
        <span class="hljs-name">firstDayOfWeek</span> !== <span class="hljs-number">0</span> <span class="hljs-symbol">&amp;&amp;</span>
        item.date.getDate() &gt;= newDateData[<span class="hljs-number">0</span>]!.day <span class="hljs-symbol">&amp;&amp;</span>
        item.date.getFullYear() === lastDayOfLastMonth.getFullYear() <span class="hljs-symbol">&amp;&amp;</span>
        item.date.getMonth() === lastDayOfLastMonth.getMonth()
      ) {
        // 日历事件日期在上个月
        newDateData[item.date.getDay()]?.event.push(<span class="hljs-name">item</span>)<span class="hljs-comment">;</span>
      }
    })<span class="hljs-comment">;</span>
    if (<span class="hljs-name">newDateData</span> <span class="hljs-symbol">&amp;&amp;</span> newDateData.length &gt; <span class="hljs-number">0</span>) {
      setDateData(<span class="hljs-name">newDateData</span>)<span class="hljs-comment">;</span>
    }
    setHaveUpdatedEvent(<span class="hljs-name">true</span>)<span class="hljs-comment">;</span>
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [calendarEventData, dateData])<span class="hljs-comment">;</span>
</code></pre>
</body></html>
  a:["$","div",null,{"className":"article_pageBody__Bryg4","children":[["$","$Lc",null,{"menuItemList":[{"id":0,"label":"首页","href":"/","icon":"/icons/home_gray.svg","iconSelected":"/icons/home_black.svg"},{"id":1,"label":"文章","href":"/articles/all/1","icon":"/icons/article_gray.svg","iconSelected":"/icons/article_black.svg"},{"id":3,"label":"关于","href":"/about","icon":"/icons/about_gray.svg","iconSelected":"/icons/about_black.svg"},{"id":4,"label":"搜索","href":"/search","icon":"/icons/search_gray.svg","iconSelected":"/icons/search_black.svg"}],"currentSelectedLabel":"文章"}],["$","div",null,{"className":"article_pageBodyMain___x_AF","children":[["$","$Ld",null,{}],["$","div",null,{"className":"article_articleContainer__uRwUh scrollContent","children":[["$","div",null,{"className":"article_articleBody__0coIY scrollContent","children":[["$","h1",null,{"style":{"marginBottom":"0.1rem","marginTop":"0.2rem"},"children":"基于React的前端日历组件编写教程"}],["$","div",null,{"children":[["$","div",null,{"className":"tags_tags__qM_Ja","children":[["$","p",null,{"className":"tags_label__Rg6b2","children":"分类"}],[["$","$Le","0",{"href":"/articles/新知笔记/1","children":["$","p","0",{"className":"tags_tag__HZYxk tags_tagLink__gnw9V","children":"新知笔记"}]}],["$","$Le","1",{"href":"/articles/前端学习/1","children":["$","p","1",{"className":"tags_tag__HZYxk tags_tagLink__gnw9V","children":"前端学习"}]}]],false]}],["$","div",null,{"className":"tags_tags__qM_Ja","children":[["$","p",null,{"className":"tags_label__Rg6b2","children":"标签"}],"$undefined",[["$","p","0",{"className":"tags_tag__HZYxk ","children":"React"}],["$","p","1",{"className":"tags_tag__HZYxk ","children":"前端"}],["$","p","2",{"className":"tags_tag__HZYxk ","children":"日历"}],["$","p","3",{"className":"tags_tag__HZYxk ","children":"html"}],["$","p","4",{"className":"tags_tag__HZYxk ","children":"typescript"}]]]}],["$","$Lf",null,{"path":"%E5%9F%BA%E4%BA%8EReact%E7%9A%84%E5%89%8D%E7%AB%AF%E6%97%A5%E5%8E%86%E7%BB%84%E4%BB%B6%E7%BC%96%E5%86%99%E6%95%99%E7%A8%8B","serverURL":"https://remark.timeshike.com/"}]]}],["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$10"}}],["$","$L11",null,{}],["$","$L12",null,{"path":"%E5%9F%BA%E4%BA%8EReact%E7%9A%84%E5%89%8D%E7%AB%AF%E6%97%A5%E5%8E%86%E7%BB%84%E4%BB%B6%E7%BC%96%E5%86%99%E6%95%99%E7%A8%8B","serverURL":"https://remark.timeshike.com/","lang":"zh-CN"}],["$","div",null,{"className":"bottomBar_bottomBar__uHU1W","children":["$","div",null,{"className":"bottomBar_text__iz3cM","children":["Powerd by",["$","a",null,{"href":"https://github.com/hixyl/YlBlog","target":"_blank","children":" YlBlog(玉龙博客)"}]]}]}]]}],["$","$L13",null,{}]]}]]}],["$","$L14",null,{}]]}]
