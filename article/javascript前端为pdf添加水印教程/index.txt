3:I[9275,[],""]
5:I[1343,[],""]
6:I[4080,["185","static/chunks/app/layout-950680b5068c0831.js"],""]
7:I[4266,["185","static/chunks/app/layout-950680b5068c0831.js"],"default"]
4:["id","javascript%E5%89%8D%E7%AB%AF%E4%B8%BApdf%E6%B7%BB%E5%8A%A0%E6%B0%B4%E5%8D%B0%E6%95%99%E7%A8%8B","d"]
0:["bbFeRMIduFcZud7BNs8NQ",[[["",{"children":["article",{"children":[["id","javascript%E5%89%8D%E7%AB%AF%E4%B8%BApdf%E6%B7%BB%E5%8A%A0%E6%B0%B4%E5%8D%B0%E6%95%99%E7%A8%8B","d"],{"children":["__PAGE__?{\"id\":\"javascript前端为pdf添加水印教程\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["article",{"children":[["id","javascript%E5%89%8D%E7%AB%AF%E4%B8%BApdf%E6%B7%BB%E5%8A%A0%E6%B0%B4%E5%8D%B0%E6%95%99%E7%A8%8B","d"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","article","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/99f6a99e5e57ec87.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/d0df4e9d9cd28850.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/c033a265c4b6e7f8.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","3",{"rel":"stylesheet","href":"/_next/static/css/81abeb1d965206f7.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","4",{"rel":"stylesheet","href":"/_next/static/css/a46a6036119d7d12.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","5",{"rel":"stylesheet","href":"/_next/static/css/51cbc18a5b192d8f.css","precedence":"next","crossOrigin":"$undefined"}]]}],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","article","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"zh","children":[["$","link",null,{"rel":"icon","href":"/favicon.png?<generated>","type":"image/<generated>","sizes":"<generated>"}],["$","$L6",null,{"src":"https://www.googletagmanager.com/gtag/js?id=G-N3DJ3JTVT2"}],["$","$L6",null,{"id":"google-analytics","children":"\n          window.dataLayer = window.dataLayer || [];\n          function gtag(){dataLayer.push(arguments);}\n          gtag('js', new Date());\n        \n          gtag('config', 'G-N3DJ3JTVT2');\n        "}],["$","body",null,{"className":"__className_36bd41","children":[["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}],["$","$L7",null,{}]]}]]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/aae87c042353adfd.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:I[2612,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
a:I[4306,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
b:I[231,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],""]
c:I[4254,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
e:I[3869,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
f:I[5339,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"Waline"]
10:I[8360,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
11:I[4226,["577","static/chunks/221e729c-e5a67d23aac7644c.js","231","static/chunks/9316e0b3-81def07e0919db1c.js","974","static/chunks/974-9ffea8f9ea4bfaa2.js","536","static/chunks/536-12c341f043d96047.js","665","static/chunks/665-f7c57b2084cbed6b.js","241","static/chunks/app/article/%5Bid%5D/page-28a3798f9eb189fc.js"],"default"]
d:T2d9b,
    <p class="time">发布时间：<time datetime="24 October, 2023">2023-10-24 11:18:29</time></p>
    <p class="words">本文字数：1,565 字       阅读完需：约 4 分钟</p>
    <blockquote>
<p><code>场景</code>：前端下载 pdf 文件的时候，需要加上水印，再反给用户下载<br>
<code>用到的库</code>：<code>pdf-lib</code> (文档) <code>@pdf-lib/fontkit</code><br>
<code>字体</code>：github<br>
<code>方案目标</code>：logo图 + 中文 + 英文 + 数字 => 透明水印 ​</p>
</blockquote>
<hr>
<blockquote>
<p>​</p>
</blockquote>
<blockquote>
<p>首先安装 <code>pdf-lib</code>: 它是前端创建和修改 PDF 文档的一个工具（默认_<code>不支持中文</code>_，需要加载自定义字体文件）</p>
</blockquote>
<blockquote>
<blockquote>
<p>npm install --save pdf-lib</p>
</blockquote>
</blockquote>
<blockquote>
<p>安装 <code>@pdf-lib/fontkit</code>：为 pdf-lib 加载自定义字体的工具</p>
</blockquote>
<blockquote>
<blockquote>
<p>npm install --save @pdf-lib/fontkit</p>
</blockquote>
</blockquote>
<blockquote>
<p>​</p>
</blockquote>
<blockquote>
<p>没有使用<code>pdf.js</code>的原因是因为：</p>
</blockquote>
<ol>
<li>会将 PDF 转成图片，无法选中</li>
<li>操作后 PDF 会变模糊</li>
<li>文档体积会变得异常大</li>
</ol>
<blockquote>
<p>​</p>
</blockquote>
<hr>
<h3>实现：</h3>
<blockquote>
<p>首先我们的目标是在 PDF 文档中，加上一个带 logo 的，同时包含中文、英文、数字字符的透明水印，所以我们先来尝试着从本地加载一个文件，一步步搭建。</p>
</blockquote>
<h4>1. 获取 PDF 文件</h4>
<blockquote>
<p>本地：</p>
</blockquote>
<pre><code>// &#x3C;input type="file" name="pdf" id="pdf-input">
let input = document.querySelector('#pdf-input');
input.onchange = onFileUpload;
// 上传文件
function onFileUpload(e) {
  let event = window.event || e;
  let file = event.target.files[0];
}
</code></pre>
<blockquote>
<p>除了本地上传文件之外，我们也可以通过网络请求一个 PDF 回来，注意响应格式为 **blob **。 网络：</p>
</blockquote>
<pre><code>var x = new XMLHttpRequest();
x.open("GET", url, true);
x.responseType = 'blob';
x.onload = function (e) {
  let file = x.response;
}
x.send();
// 获取直接转成 pdf-lib 需要的 arrayBuffer
// const fileBytes = await fetch(url).then(res => res.arrayBuffer())
</code></pre>
<h4>2. 文字水印</h4>
<blockquote>
<p>在获取到 PDF 文件数据之后，我们通过 pdf-lib 提供的接口来对文档做修改。</p>
</blockquote>
<pre><code>// 修改文档
async function modifyPdf(file) {
  const pdfDoc = await PDFDocument.load(await file.arrayBuffer());
  // 加载内置字体
  const helveticaFont = await pdfDoc.embedFont(StandardFonts.Courier);
  // 获取文档所有页
  const pages = pdfDoc.getPages();
  // 文字渲染配置
  const drawTextParams = {
    lineHeight: 50,
    font: helveticaFont,
    size: 12,
    color: rgb(08, 08, 2),
    rotate: degrees(15),
    opacity: 5,
  };
  for (let i = 0; i &#x3C; pages.length; i++) {
    const page = pages[i];
    // 获取当前页宽高
    const { width, height } = page.getSize();
    // 要渲染的文字内容
    let text = "water 121314";
    for (let ix = 1; ix &#x3C; width; ix += 230) { // 水印横向间隔
      let lineNum = 0; 
      for (let iy = 50; iy &#x3C;= height; iy += 110) { // 水印纵向间隔
        lineNum++;

        page.drawText(text, {
          x: lineNum &#x26; 1 ? ix : ix + 70,
          y: iy,
          ...drawTextParams,
        });
      }
    }
  }
</code></pre>
<blockquote>
<p>来看一下现在的效果 <img src="imgabc1.webp" alt="image.png"></p>
</blockquote>
<h4>3. 加载本地 logo</h4>
<blockquote>
<p>在加载图片这块，我们最终想要的其实是图片的 Blob 数据，获取网图的话，这里就不做介绍了，下边主要着重介绍一下，如何通过 js 从本地加载一张图。 先贴上代码：</p>
</blockquote>
<pre><code>//  加载 logo blob 数据
~(function loadImg() {
  let img = new Image();
  img.src = "./water-logo.png";
  let canvas = document.createElement("canvas");
  let ctx = canvas.getContext("2d");
  img.crossOrigin = "";
  img.onload = function () {
    canvas.width = this.width;
    canvas.height = this.height;
    ctx.fillStyle = "rgba(255, 255, 255, 1)"; 
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    ctx.drawImage(this, 0, 0, this.width, this.height);
    canvas.toBlob(
      function (blob) {
        imgBytes = blob;  // 保存数据到 imgBytes 中
      },
      "image/jpeg",
      1
    ); // 参数为输出质量
  };
})();
</code></pre>
<blockquote>
<p>首先通过一个自执行函数，在初期就自动加载 logo 数据，当然我们也可以根据实际情况做相应的优化。 整体的思路就是，首先通过 image 元素来加载本地资源，再将 img 渲染到 canvas 中，再通过 canvas 的 toBlob 来得到我们想要的数据。 ​</p>
</blockquote>
<blockquote>
<p>在这块我们需要注意两行代码：</p>
</blockquote>
<pre><code>ctx.fillStyle = "rgba(255, 255, 255, 1)"; 
ctx.fillRect(0, 0, canvas.width, canvas.height);
</code></pre>
<blockquote>
<p>如果我们不加这两行代码的话，同时本地图片还是透明图，最后我们得到的数据将会是一个黑色的方块。所以我们需要在 drawImage 之前，用白色填充一下 canvas 。 ​</p>
</blockquote>
<h4>4. 渲染 logo</h4>
<blockquote>
<p>在渲染 logo 图片到 PDF 文档上之前，我们还需要和加载字体类似的，把图片数据也挂载到 pdf-lib 创建的文档对象上（pdfDoc），其中 imgBytes 是我们已经加载好的图片数据。</p>
</blockquote>
<pre><code>let _img = await pdfDoc.embedJpg(await imgBytes.arrayBuffer());
</code></pre>
<blockquote>
<p>挂载完之后，做一些个性化的配置</p>
</blockquote>
<pre><code>page.drawImage(_img, {
  x: lineNum &#x26; 1 ? ix - 18 : ix + 70 - 18, // 奇偶行的坐标
  y: iy - 8,
  width: 15,
  height: 15,
  opacity: 5,
});
</code></pre>
<h4>5. 查看文档</h4>
<blockquote>
<p>这一步的思路就是先通过 pdf-lib 提供的 save 方法，得到最后的文档数据，将数据转成 Blob，最后通过 a 标签打开查看。</p>
</blockquote>
<pre><code>// 保存文档 Serialize the PDFDocument to bytes (a Uint8Array)
  const pdfBytes = await pdfDoc.save();
  let blobData = new Blob([pdfBytes], { type: "application/pdf;Base64" });
  // 新标签页预览
  let a = document.createElement("a");
  a.target = "_blank";
  a.href = window.URL.createObjectURL(blobData);
  document.body.appendChild(a);
  a.click();
  document.body.removeChild(a);
</code></pre>
<blockquote>
<p>到目前的效果 <img src="imgabc2.webp" alt="image.png"></p>
</blockquote>
<h4>6. 中文字体</h4>
<blockquote>
<p>由于默认的 pdf-lib 是不支持渲染中文的</p>
</blockquote>
<pre><code>Uncaught (in promise) Error: WinAnsi cannot encode "水" (0x6c34)
</code></pre>
<p><img src="imgabc3.webp" alt="image.png"></p>
<blockquote>
<p>所以我们需要加载自定义字体，但是常规的字体文件都会很大，为了使用，需要将字体文件压缩一下，压缩好的字体在文档头部，包含空格和基础的3500字符。 压缩字体用到的是 <code>gulp-fontmin</code> 命令行工具，不是客户端。具体压缩方法，可自行搜索。 ​</p>
</blockquote>
<blockquote>
<p>​</p>
</blockquote>
<blockquote>
<p>在拿到字体之后（ttf文件），将字体文件上传到网上，再拿到其 arrayBuffer 数据。之后再结合 pdf-lib 的文档对象，对字体进行注册和挂载。同时记得将文字渲染的字体配置改过来。</p>
</blockquote>
<pre><code>// 加载自定义字体
const url = 'https://xxx.xxx/xxxx';
const fontBytes = await fetch(url).then((res) => res.arrayBuffer());
// 自定义字体挂载
pdfDoc.registerFontkit(fontkit)
const customFont = await pdfDoc.embedFont(fontBytes)
// 文字渲染配置
  const drawTextParams = {
    lineHeight: 50,
    font: customFont,  // 改字体配置
    size: 12,
    color: rgb(08, 08, 2),
    rotate: degrees(15),
    opacity: 5,
  };
</code></pre>
<blockquote>
<p>所以到现在的效果 <img src="imgabc4.webp" alt="image.png"></p>
</blockquote>
<h4>7. 完整代码</h4>
<pre><code>import { PDFDocument, StandardFonts, rgb, degrees } from "pdf-lib";
import fontkit from "@pdf-lib/fontkit";
let input = document.querySelector("#pdf-input");
let imgBytes;
input.onchange = onFileUpload;
// 上传文件
function onFileUpload(e) {
  let event = window.event || e;
  let file = event.target.files[0];
  console.log(file);
  if (file.size) {
    modifyPdf(file);
  }
}
// 修改文档
async function modifyPdf(file) {
  const pdfDoc = await PDFDocument.load(await file.arrayBuffer());
  // 加载内置字体
  const helveticaFont = await pdfDoc.embedFont(StandardFonts.Courier);
  // 加载自定义字体
  const url = 'pttps://xxx.xxx/xxx';
  const fontBytes = await fetch(url).then((res) => res.arrayBuffer());
  // 自定义字体挂载
  pdfDoc.registerFontkit(fontkit)
  const customFont = await pdfDoc.embedFont(fontBytes)
  // 获取文档所有页
  const pages = pdfDoc.getPages();
  // 文字渲染配置
  const drawTextParams = {
    lineHeight: 50,
    font: customFont,
    size: 12,
    color: rgb(08, 08, 2),
    rotate: degrees(15),
    opacity: 5,
  };
  let _img = await pdfDoc.embedJpg(await imgBytes.arrayBuffer());
  for (let i = 0; i &#x3C; pages.length; i++) {
    const page = pages[i];
    // 获取当前页宽高
    const { width, height } = page.getSize();
    // 要渲染的文字内容
    let text = "水印 water 121314";
    for (let ix = 1; ix &#x3C; width; ix += 230) { // 水印横向间隔
      let lineNum = 0; 
      for (let iy = 50; iy &#x3C;= height; iy += 110) { // 水印纵向间隔
        lineNum++;
        page.drawImage(_img, {
          x: lineNum &#x26; 1 ? ix - 18 : ix + 70 - 18,
          y: iy - 8,
          width: 15,
          height: 15,
          opacity: 7,
        });
        page.drawText(text, {
          x: lineNum &#x26; 1 ? ix : ix + 70,
          y: iy,
          ...drawTextParams,
        });
      }
    }
  }
  // 保存文档 Serialize the PDFDocument to bytes (a Uint8Array)
  const pdfBytes = await pdfDoc.save();
  let blobData = new Blob([pdfBytes], { type: "application/pdf;Base64" });
  // 新标签页预览
  let a = document.createElement("a");
  a.target = "_blank";
  a.href = window.URL.createObjectURL(blobData);
  document.body.appendChild(a);
  a.click();
  document.body.removeChild(a);
}
//  加载 logo blob 数据
~(function loadImg() {
  let img = new Image();
  img.src = "./water-logo.png";
  let canvas = document.createElement("canvas");
  let ctx = canvas.getContext("2d");
  img.crossOrigin = "";
  img.onload = function () {
    canvas.width = this.width;
    canvas.height = this.height;
    ctx.fillStyle = "rgba(255, 255, 255, 1)";
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    ctx.drawImage(this, 0, 0, this.width, this.height);
    canvas.toBlob(
      function (blob) {
        imgBytes = blob;
      },
      "image/jpeg",
      1
    ); // 参数为输出质量
  };
})();
</code></pre>
<h4>8. 不完美的地方</h4>
<blockquote>
<p>当前方案虽然可以实现在前端为 PDF 加水印，但是由于时间关系，有些瑕疵还需要再进一步探索解决 💪：</p>
</blockquote>
<ol>
<li>水印是浮在原文本之上的，可以被选中</li>
<li>logo 的背景虽然不注意看不到，但是实际上还未完全透明 🤔</li>
</ol>

  2:["$","div",null,{"className":"article_pageBody__Bryg4","children":[["$","$L9",null,{"menuItemList":[{"id":0,"label":"首页","href":"/","icon":"/icons/home_gray.svg","iconSelected":"/icons/home_black.svg"},{"id":1,"label":"文章","href":"/articles/all/1","icon":"/icons/article_gray.svg","iconSelected":"/icons/article_black.svg"},{"id":3,"label":"关于","href":"/about","icon":"/icons/about_gray.svg","iconSelected":"/icons/about_black.svg"},{"id":4,"label":"搜索","href":"/search","icon":"/icons/search_gray.svg","iconSelected":"/icons/search_black.svg"}],"currentSelectedLabel":"文章"}],["$","div",null,{"className":"article_pageBodyMain___x_AF","children":[["$","$La",null,{}],["$","div",null,{"className":"article_articleContainer__uRwUh scrollContent","children":[["$","div",null,{"className":"article_articleBody__0coIY scrollContent","children":[["$","h1",null,{"style":{"marginBottom":"0.1rem","marginTop":"0.2rem"},"children":"javascript前端为pdf添加水印教程"}],["$","div",null,{"children":[["$","div",null,{"className":"tags_tags__qM_Ja","children":[["$","p",null,{"className":"tags_label__Rg6b2","children":"分类"}],[["$","$Lb","0",{"href":"/articles/新知笔记/1","children":["$","p","0",{"className":"tags_tag__HZYxk tags_tagLink__gnw9V","children":"新知笔记"}]}],["$","$Lb","1",{"href":"/articles/前端技术/1","children":["$","p","1",{"className":"tags_tag__HZYxk tags_tagLink__gnw9V","children":"前端技术"}]}]],false]}],["$","div",null,{"className":"tags_tags__qM_Ja","children":[["$","p",null,{"className":"tags_label__Rg6b2","children":"标签"}],"$undefined",[["$","p","0",{"className":"tags_tag__HZYxk ","children":"javascript"}],["$","p","1",{"className":"tags_tag__HZYxk ","children":"前端"}],["$","p","2",{"className":"tags_tag__HZYxk ","children":"pdf"}],["$","p","3",{"className":"tags_tag__HZYxk ","children":"pdfLib"}],["$","p","4",{"className":"tags_tag__HZYxk ","children":"font"}]]]}],["$","$Lc",null,{"path":"javascript%E5%89%8D%E7%AB%AF%E4%B8%BApdf%E6%B7%BB%E5%8A%A0%E6%B0%B4%E5%8D%B0%E6%95%99%E7%A8%8B","serverURL":"https://remark.timeshike.com/"}]]}],["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$d"}}],["$","$Le",null,{}],["$","$Lf",null,{"path":"javascript%E5%89%8D%E7%AB%AF%E4%B8%BApdf%E6%B7%BB%E5%8A%A0%E6%B0%B4%E5%8D%B0%E6%95%99%E7%A8%8B","serverURL":"https://remark.timeshike.com/","lang":"zh-CN"}],["$","div",null,{"className":"bottomBar_bottomBar__uHU1W","children":["$","div",null,{"className":"bottomBar_text__iz3cM","children":["Powerd by",["$","a",null,{"href":"https://github.com/hixyl/YlBlog","target":"_blank","children":" YlBlog(玉龙博客)"}]]}]}]]}],["$","$L10",null,{}]]}]]}],["$","$L11",null,{}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"javascript前端为pdf添加水印教程 - 流年石刻"}],["$","meta","3",{"name":"next-size-adjust"}]]
1:null
